version: '3'
services:
  nodered:
    image: "nodered/node-red"
    ports:
      - "1880:1880"
    volumes:
      - C:\Users\MACIEJMARTUSEWICZ\NRdata:/data
    networks:
      - internal_network
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
    volumes:
      - C:\Users\MACIEJMARTUSEWICZ\DockerData:/data:rw
    networks:
      - internal_network
  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.1
    ports:
      - "5601:5601"
    environment:
      SERVER_NAME: kibana
      SERVER_HOST: kibana
      ELASTICSEARCH_HOSTS: http://host.docker.internal:9200/
    volumes:
      - C:\Users\MACIEJMARTUSEWICZ\DockerData:/data:rw
    depends_on:
      - elastic
    networks:
      - internal_network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - internal_network
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports: 
      - 9092:9092
      - 29092:29092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - internal_network
  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
    networks:
      - internal_network
  json-server:
    image: "clue/json-server"
    ports:
      - "3000:80"
    volumes:
      - C:\Users\MACIEJMARTUSEWICZ\DockerData\jsonserver\db.json:/data/db.json
    networks:
      - internal_network
networks:
  internal_network:
networks:
  internal_network:
# docker-compose up -d
# docker-compose down
# docker-compose start
# docker-compose stop