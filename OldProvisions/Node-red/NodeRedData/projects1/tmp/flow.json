[
    {
        "id": "1c223e46fc18673d",
        "type": "tab",
        "label": "IOT-virtual-device",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f4c5f5daeb6378b8",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9340536010ad11d6",
        "type": "tab",
        "label": "Flow 6",
        "disabled": false,
        "info": ""
    },
    {
        "id": "52010b312b44a905",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": ""
    },
    {
        "id": "52d38d07.d65f4c",
        "type": "tab",
        "label": "Prepare Report",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bd1f60e0.1331",
        "type": "tab",
        "label": "Mainflow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "58c2be53.4582c",
        "type": "tab",
        "label": "Present repositories",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1d546a54.b83da6",
        "type": "tab",
        "label": "LocalStorage Mngt",
        "disabled": false,
        "info": ""
    },
    {
        "id": "63b5c0f9.cf726",
        "type": "tab",
        "label": "localStorage",
        "disabled": false,
        "info": ""
    },
    {
        "id": "84528de1.e0a41",
        "type": "tab",
        "label": "jsGrid CRUD mysql",
        "disabled": true,
        "info": ""
    },
    {
        "id": "24edd7b1.7094d8",
        "type": "tab",
        "label": "RESTful API"
    },
    {
        "id": "edfc21e0.78edc",
        "type": "tab",
        "label": "Gridview with CRUD options (mongodb)"
    },
    {
        "id": "3af76400804f2121",
        "type": "Device Schema",
        "deviceType": "type2",
        "props": [
            {
                "guid": "e2f31a1b7c4d",
                "name": "par11",
                "random": {
                    "func": "guid",
                    "args": {}
                }
            },
            {
                "guid": "e61ae20fed88",
                "name": "par22",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "9444e6396616",
                "name": "par33",
                "random": {
                    "func": "string",
                    "args": {
                        "length": 5
                    }
                }
            }
        ],
        "evts": [
            {
                "guid": "c9af5b2c3fcd",
                "name": "event11",
                "payload": {
                    "properties": {
                        "0": "e2f31a1b7c4d",
                        "1": "e61ae20fed88",
                        "length": 2,
                        "prevObject": {
                            "0": "e2f31a1b7c4d",
                            "1": "e61ae20fed88",
                            "length": 2,
                            "prevObject": {
                                "0": {},
                                "1": {},
                                "length": 2,
                                "prevObject": {
                                    "0": {
                                        "sizzle1634553158969": {
                                            "undefined": {
                                                "parentNode": [
                                                    137,
                                                    27,
                                                    true
                                                ]
                                            }
                                        }
                                    },
                                    "length": 1
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "id": "ae8a8588a4ccbf25",
        "type": "Device Schema",
        "deviceType": "type1",
        "props": [
            {
                "guid": "4e1243c767b4",
                "name": "par1",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "c87266456f2b",
                "name": "par2",
                "random": {
                    "func": "string",
                    "args": {
                        "length": 5
                    }
                }
            },
            {
                "guid": "ed0d55bc0463",
                "name": "par3",
                "random": {
                    "func": "bool",
                    "args": {
                        "likelihood": 30
                    }
                }
            }
        ],
        "evts": [
            {
                "guid": "5477ed1486b8",
                "name": "new",
                "payload": {
                    "properties": {
                        "0": "4e1243c767b4",
                        "length": 1,
                        "prevObject": {
                            "0": "4e1243c767b4",
                            "length": 1,
                            "prevObject": {
                                "0": {},
                                "length": 1,
                                "prevObject": {
                                    "0": {
                                        "sizzle1634559587393": {
                                            "undefined": {
                                                "parentNode": [
                                                    375,
                                                    43,
                                                    true
                                                ]
                                            }
                                        }
                                    },
                                    "length": 1
                                }
                            }
                        }
                    }
                }
            },
            {
                "guid": "6cd55b4e86f0",
                "name": "old",
                "payload": {
                    "properties": {
                        "0": "4e1243c767b4",
                        "1": "c87266456f2b",
                        "length": 2,
                        "prevObject": {
                            "0": "4e1243c767b4",
                            "1": "c87266456f2b",
                            "length": 2,
                            "prevObject": {
                                "0": {},
                                "1": {},
                                "length": 2,
                                "prevObject": {
                                    "0": {
                                        "sizzle1634559587393": {
                                            "undefined": {
                                                "parentNode": [
                                                    376,
                                                    43,
                                                    true
                                                ]
                                            }
                                        }
                                    },
                                    "length": 1
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "id": "b6e56c3f.e8dd1",
        "type": "Device Schema",
        "deviceType": "Elevator",
        "props": [
            {
                "guid": "e76a0e692587",
                "name": "motorTemp",
                "random": {
                    "func": "floating",
                    "args": {
                        "min": 150,
                        "max": 170,
                        "fixed": 4
                    }
                }
            },
            {
                "guid": "c2881d12e8f3",
                "name": "currentFloor",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 6
                    }
                }
            },
            {
                "guid": "38416d39cffe",
                "name": "doorOpen",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "745ce852562a",
                "name": "state",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "d1ebf05ff8fb",
                "name": "numberOfFloors",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "80cc3cb81053",
                "name": "cabinTemp",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 70,
                        "max": 95
                    }
                }
            },
            {
                "guid": "40741d3132a4",
                "name": "cabinSpeed",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "297fd95abda8",
                "name": "direction",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "bcca0e31b9d6",
                "name": "load",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "c15961c2f7bf",
                "name": "gotoFloor",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "1bd9b63f4b60",
                "name": "maintenanceStop",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "717226438586",
                "name": "forceOpenDoor",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "bd4d2913cb07",
                "name": "maintenanceReason",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "efd6898dd4db",
                "name": "maxMotorTemp",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "438e94df7c4a",
                "name": "minMotorTemp",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "2b397533cfa2",
                "name": "curtainOfLightBreak",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "299639e87d50",
                "name": "cleanessOfFloor",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "ba7d2793453d",
                "name": "curtainOfLightBreakCount",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "459e0d4c3af6",
                "name": "curtainOfLightBreakRate",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "7fa0c8927a50",
                "name": "floorStopReq",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            },
            {
                "guid": "3e84a9a94615",
                "name": "autoFloorSelection",
                "random": {
                    "func": "integer",
                    "args": {
                        "min": 0,
                        "max": 100
                    }
                }
            }
        ],
        "evts": [
            {
                "guid": "0612deed98b7",
                "name": "Status",
                "payload": {
                    "properties": {
                        "0": "e76a0e692587",
                        "1": "c2881d12e8f3",
                        "2": "38416d39cffe",
                        "3": "745ce852562a",
                        "4": "d1ebf05ff8fb",
                        "5": "80cc3cb81053",
                        "6": "40741d3132a4",
                        "7": "297fd95abda8",
                        "8": "bcca0e31b9d6",
                        "9": "c15961c2f7bf",
                        "10": "1bd9b63f4b60",
                        "11": "717226438586",
                        "12": "bd4d2913cb07",
                        "13": "efd6898dd4db",
                        "14": "438e94df7c4a",
                        "15": "2b397533cfa2",
                        "16": "299639e87d50",
                        "17": "ba7d2793453d",
                        "18": "459e0d4c3af6",
                        "19": "7fa0c8927a50",
                        "20": "3e84a9a94615",
                        "length": 21,
                        "prevObject": {
                            "0": "e76a0e692587",
                            "1": "c2881d12e8f3",
                            "2": "38416d39cffe",
                            "3": "745ce852562a",
                            "4": "d1ebf05ff8fb",
                            "5": "80cc3cb81053",
                            "6": "40741d3132a4",
                            "7": "297fd95abda8",
                            "8": "bcca0e31b9d6",
                            "9": "c15961c2f7bf",
                            "10": "1bd9b63f4b60",
                            "11": "717226438586",
                            "12": "bd4d2913cb07",
                            "13": "efd6898dd4db",
                            "14": "438e94df7c4a",
                            "15": "2b397533cfa2",
                            "16": "299639e87d50",
                            "17": "ba7d2793453d",
                            "18": "459e0d4c3af6",
                            "19": "7fa0c8927a50",
                            "20": "3e84a9a94615",
                            "length": 21,
                            "prevObject": {
                                "0": {},
                                "1": {},
                                "2": {},
                                "3": {},
                                "4": {},
                                "5": {},
                                "6": {},
                                "7": {},
                                "8": {},
                                "9": {},
                                "10": {},
                                "11": {},
                                "12": {},
                                "13": {},
                                "14": {},
                                "15": {},
                                "16": {},
                                "17": {},
                                "18": {},
                                "19": {},
                                "20": {},
                                "length": 21,
                                "prevObject": {
                                    "0": {
                                        "sizzle1636359159101": {
                                            "undefined": {
                                                "parentNode": [
                                                    600,
                                                    39,
                                                    true
                                                ]
                                            }
                                        }
                                    },
                                    "length": 1
                                }
                            }
                        }
                    }
                }
            }
        ]
    },
    {
        "id": "fdcc3ce707ad1ee3",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "bbb6ffc5.18394",
        "type": "ui_tab",
        "name": "Kafka",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8955c84d.de5028",
        "type": "ui_tab",
        "name": "Redis",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7f9982b2.d476dc",
        "type": "ui_tab",
        "name": "Weather",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "26ceb598.9cb1a2",
        "type": "ui_tab",
        "name": "DataPower Mock",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a51fb204e1cbfb07",
        "type": "ui_group",
        "z": "9340536010ad11d6",
        "name": "Elevator Properties",
        "tab": "7924d1cd0d2d0a8e",
        "order": 4,
        "disp": true,
        "width": "6"
    },
    {
        "id": "6e95a768c6d35413",
        "type": "ui_group",
        "z": "9340536010ad11d6",
        "name": "Elevator Control",
        "tab": "7924d1cd0d2d0a8e",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "2c6a2eb6ed7d54e2",
        "type": "ui_group",
        "z": "9340536010ad11d6",
        "name": "Simulation Config",
        "tab": "7924d1cd0d2d0a8e",
        "order": 5,
        "disp": true,
        "width": "6"
    },
    {
        "id": "ec0b46526aa9ef15",
        "type": "ui_group",
        "z": "9340536010ad11d6",
        "name": "Floors panel",
        "tab": "7924d1cd0d2d0a8e",
        "order": 2,
        "disp": true,
        "width": "7"
    },
    {
        "id": "1ddf1d13f49ccf05",
        "type": "ui_group",
        "z": "9340536010ad11d6",
        "name": "Instance",
        "tab": "7924d1cd0d2d0a8e",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "7924d1cd0d2d0a8e",
        "type": "ui_tab",
        "z": "9340536010ad11d6",
        "name": "Elevator",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "3ccae9e6.f71f16",
        "type": "Kafka Broker",
        "name": "New",
        "hosts": [
            {
                "host": "kafka",
                "port": 29092
            }
        ],
        "hostsEnvVar": "",
        "connectTimeout": "10000",
        "requestTimeout": "30000",
        "autoConnect": "true",
        "idleConnection": "5",
        "reconnectOnIdle": "true",
        "maxAsyncRequests": "10",
        "checkInterval": "10",
        "selfSign": true,
        "usetls": false
    },
    {
        "id": "2bcf548e.9f0ce4",
        "type": "Kafka Broker",
        "name": "",
        "hosts": [
            {
                "host": "kafka",
                "port": 29092
            }
        ],
        "hostsEnvVar": "",
        "connectTimeout": "60000",
        "requestTimeout": "30000",
        "autoConnect": "true",
        "idleConnection": "5",
        "reconnectOnIdle": "true",
        "maxAsyncRequests": "10",
        "checkInterval": "10",
        "selfSign": true,
        "usetls": false,
        "useCredentials": false
    },
    {
        "id": "4b4504d6.cb1bbc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3b9b9c25.9d5e1c",
        "type": "ui_group",
        "name": "Home",
        "tab": "4b4504d6.cb1bbc",
        "order": 1,
        "disp": true,
        "width": "13",
        "collapse": true
    },
    {
        "id": "3c22421ac5d86708",
        "type": "key-value-store",
        "filepath": "store.json",
        "namespace": "",
        "name": "store"
    },
    {
        "id": "83d11e62.e6bdf8",
        "type": "MySQLdatabase",
        "name": "db",
        "host": "mysql",
        "port": "3306",
        "db": "db",
        "tz": ""
    },
    {
        "id": "4d19ce73.ca2c7",
        "type": "MySQLdatabase",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "sys",
        "tz": ""
    },
    {
        "id": "87abade9.73453",
        "type": "MySQLdatabase",
        "name": "db",
        "host": "mysql",
        "port": "${MYSQL_PORT}",
        "db": "${MYSQL_DATABASE}",
        "tz": ""
    },
    {
        "id": "397dc13a.ebe9be",
        "type": "mongodb2",
        "uri": "${DB_W_URL}",
        "name": "${DB_W_NAME}",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "6a8dbd61.5447ac",
        "type": "mongodb2",
        "uri": "${DB_R_URL}",
        "name": "${DB_R_NAME}",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "dbb15fb2.864f78",
        "type": "mongodb2",
        "uri": "${DB_URL}",
        "name": "${DB_NAME}",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "c3203948.c23e58",
        "type": "mongodb2",
        "uri": "${DB_URL}",
        "name": "${DB_NAME}",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "52ab3e5a.706da8",
        "type": "mongodb2",
        "uri": "mongodb://localhost:27017/cruddb",
        "name": "cruddb",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "b4f52f6c.615c9",
        "type": "mongodb2",
        "uri": "mongodb://localhost:27017/db",
        "name": "db",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "99c27679.677b48",
        "type": "mongodb2",
        "uri": "mongodb://localhost:27017/db",
        "name": "db",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "66542b36.984234",
        "type": "redis-config",
        "name": "Master",
        "options": "REDIS_MASTER_URL",
        "cluster": false,
        "optionsType": "env"
    },
    {
        "id": "458fbdff.e741d4",
        "type": "redis-config",
        "name": "Slave",
        "options": "REDIS_SLAVE_URL",
        "cluster": false,
        "optionsType": "env"
    },
    {
        "id": "c586297.eeac458",
        "type": "redis-config",
        "name": "remote2",
        "options": "REDIS_SLAVE_URL",
        "cluster": false,
        "optionsType": "env"
    },
    {
        "id": "f4be98fb.fb1858",
        "type": "elasticsearch-config",
        "name": "ElasticSearch",
        "server": "http://elastic:9200/",
        "timeout": "30000",
        "apiVersion": "7.x"
    },
    {
        "id": "f0408e20.980a88",
        "type": "swagger-doc",
        "summary": "Hello World",
        "description": "Hello World",
        "tags": "",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
            {
                "name": "name",
                "in": "query",
                "description": "name",
                "required": false,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "Success",
                "schema": {
                    "properties": {
                        "java": {
                            "type": "string"
                        },
                        "node": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "deprecated": false
    },
    {
        "id": "9d272708.3ed5f",
        "type": "swagger-doc",
        "summary": "",
        "description": "",
        "tags": "",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
            {
                "name": "id",
                "in": "query",
                "required": true,
                "type": "number"
            }
        ],
        "responses": {
            "200": {
                "description": ""
            }
        },
        "deprecated": false
    },
    {
        "id": "a460f584.7074a",
        "type": "swagger-doc",
        "summary": "",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {},
        "deprecated": false
    },
    {
        "id": "380adfe.9aad82",
        "type": "swagger-doc",
        "summary": "",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "task",
                "in": "body",
                "required": true,
                "schema": {
                    "type": "object"
                }
            }
        ],
        "responses": {},
        "deprecated": false
    },
    {
        "id": "7f6f33a1080f4301",
        "type": "start virtual device",
        "z": "1c223e46fc18673d",
        "name": "",
        "deviceId": "",
        "schema": "ae8a8588a4ccbf25",
        "outputs": 1,
        "x": 470,
        "y": 20,
        "wires": [
            [
                "0f7908f705f7a99e"
            ]
        ]
    },
    {
        "id": "faa19b95690cbd39",
        "type": "stop virtual device",
        "z": "1c223e46fc18673d",
        "name": "",
        "deviceId": "",
        "schema": "3af76400804f2121",
        "x": 390,
        "y": 160,
        "wires": [
            [
                "0f7908f705f7a99e"
            ]
        ]
    },
    {
        "id": "87431a8851104ffb",
        "type": "inject",
        "z": "1c223e46fc18673d",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"instances\":3}",
        "payloadType": "json",
        "x": 110,
        "y": 20,
        "wires": [
            [
                "122d944504c8a378"
            ]
        ]
    },
    {
        "id": "122d944504c8a378",
        "type": "function",
        "z": "1c223e46fc18673d",
        "name": "",
        "func": "var deviceMsgs = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId;\n        deviceId = \"Device-\" + uuidv4() ; \n    deviceMsgs.push({payload: {deviceId: deviceId}});\n}\nreturn [deviceMsgs];\n\n\n// UDDI generator function\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 20,
        "wires": [
            [
                "7f6f33a1080f4301"
            ]
        ]
    },
    {
        "id": "0f7908f705f7a99e",
        "type": "debug",
        "z": "1c223e46fc18673d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "c26ecc44bc268da8",
        "type": "debug",
        "z": "1c223e46fc18673d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 260,
        "wires": []
    },
    {
        "id": "96632415887b43cc",
        "type": "function",
        "z": "1c223e46fc18673d",
        "name": "",
        "func": "var deviceMsgs = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId;\n    if(i < 9) {\n        \n        deviceId = \"Device0\" + (i+1); \n    } else {\n        deviceId = \"Device\" + (i+1); \n    }\n    deviceMsgs.push({payload: {deviceId: deviceId}});\n}\nreturn [deviceMsgs];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 340,
        "wires": [
            [
                "faa19b95690cbd39"
            ]
        ]
    },
    {
        "id": "c392a471144f5921",
        "type": "inject",
        "z": "1c223e46fc18673d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"instances\":3}",
        "payloadType": "json",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "96632415887b43cc"
            ]
        ]
    },
    {
        "id": "009e0a24139f4709",
        "type": "inject",
        "z": "1c223e46fc18673d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 380,
        "wires": [
            [
                "38156d2a426c29de"
            ]
        ]
    },
    {
        "id": "4f4ba1f77ca382ef",
        "type": "debug",
        "z": "1c223e46fc18673d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "38156d2a426c29de",
        "type": "list devices",
        "z": "1c223e46fc18673d",
        "name": "",
        "x": 470,
        "y": 340,
        "wires": [
            [
                "a12bbff6d5a7f183"
            ]
        ]
    },
    {
        "id": "33bcefe6b3401ac0",
        "type": "function",
        "z": "1c223e46fc18673d",
        "name": "",
        "func": "var deviceMsgs = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId;\n        deviceId = \"Device-\" + uuidv4() ; \n    deviceMsgs.push({payload: {deviceId: deviceId}});\n}\nreturn [deviceMsgs];\n\n\n// UDDI generator function\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            [
                "16fe0efb1b322b96"
            ]
        ]
    },
    {
        "id": "16fe0efb1b322b96",
        "type": "start virtual device",
        "z": "1c223e46fc18673d",
        "name": "",
        "deviceId": "",
        "schema": "3af76400804f2121",
        "outputs": 1,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "0f7908f705f7a99e"
            ]
        ]
    },
    {
        "id": "d5e03e0e3425e1d0",
        "type": "inject",
        "z": "1c223e46fc18673d",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"instances\":3}",
        "payloadType": "json",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "33bcefe6b3401ac0"
            ]
        ]
    },
    {
        "id": "a12bbff6d5a7f183",
        "type": "function",
        "z": "1c223e46fc18673d",
        "name": "",
        "func": "global.set(\"device\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 380,
        "wires": [
            [
                "4f4ba1f77ca382ef"
            ]
        ]
    },
    {
        "id": "d5e35962bb998936",
        "type": "device function",
        "z": "1c223e46fc18673d",
        "deviceId": "",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "915cdc677d198fee",
        "type": "inject",
        "z": "f4c5f5daeb6378b8",
        "name": "start",
        "props": [
            {
                "p": "payload",
                "v": "{\"instances\":3}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"instances\":3}",
        "payloadType": "json",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "de112690f9bd4476"
            ]
        ]
    },
    {
        "id": "c8ae2e949964abb7",
        "type": "start virtual device",
        "z": "f4c5f5daeb6378b8",
        "name": "",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "outputs": 1,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "4a6b169fa5bfbc6c"
            ]
        ]
    },
    {
        "id": "8c7c0ce8c45d14a0",
        "type": "stop virtual device",
        "z": "f4c5f5daeb6378b8",
        "name": "",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "x": 730,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "cf98f25fc9c71dbf",
        "type": "inject",
        "z": "f4c5f5daeb6378b8",
        "name": "stop",
        "props": [
            {
                "p": "payload",
                "v": "{\"instances\":3}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"instances\":3}",
        "payloadType": "json",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "041ab39c11a380cb"
            ]
        ]
    },
    {
        "id": "de112690f9bd4476",
        "type": "function",
        "z": "f4c5f5daeb6378b8",
        "name": "setDeviceId",
        "func": "var deviceMsgs = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId;\n    if(i < 9) {\n        \n        deviceId = \"Device0\" + (i+1); \n    } else {\n        deviceId = \"Device\" + (i+1); \n    }\n    deviceMsgs.push({payload: {deviceId: deviceId}});\n}\n\n\n\n\nreturn [deviceMsgs];\n",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "c8ae2e949964abb7"
            ]
        ]
    },
    {
        "id": "041ab39c11a380cb",
        "type": "function",
        "z": "f4c5f5daeb6378b8",
        "name": "setDeviceId",
        "func": "var deviceMsgs3 = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId2;\n    if(i < 9) {\n        \n        deviceId2 = \"Device0\" + (i+1); \n    } else {\n        deviceId2 = \"Device\" + (i+1); \n    }\n    deviceMsgs3.push({payload: {deviceId: deviceId2}});\n}\nreturn [deviceMsgs3];\n",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 360,
        "wires": [
            [
                "1d6034695c7e9d37"
            ]
        ]
    },
    {
        "id": "1d6034695c7e9d37",
        "type": "set properties",
        "z": "f4c5f5daeb6378b8",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "set state off",
        "propAll": false,
        "prop": "cf34a9983af3",
        "valueType": "str",
        "value": "off",
        "x": 470,
        "y": 360,
        "wires": [
            [
                "8c7c0ce8c45d14a0"
            ]
        ]
    },
    {
        "id": "4a6b169fa5bfbc6c",
        "type": "device function",
        "z": "f4c5f5daeb6378b8",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "",
        "func": "var lat = [53.135278, 53.843611, 53.773056, 54.3475, 54.519167, 54.465833, 54.190278, 53.438056, 52.408333, 51.11, 50.264167, 50.061389, 50.033611, 51.25, 52.232222];\nvar lon = [23.145556, 22.9775, 20.476111, 18.645278, 18.539444, 17.029167, 16.181667, 14.542222, 16.934167, 17.022222, 19.023611, 19.938333, 22.004722, 22.566667, 21.008333];\nif (state === \"moving\") {\nvar ran = Math.floor(Math.random() * 14)\nvar idx = context.get(msg.payload.deviceId+'count') || ran;\nif( idx > 14)\n{\n    idx = 0;  \n}\nlatitude = lat[idx];\nlongitude = lon[idx];\ntimestamp = Date.now()\ncontext.set(msg.payload.deviceId+'count',idx+1);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 80,
        "wires": [
            [
                "b5109b484239a0b9",
                "337b7eb273233879"
            ]
        ]
    },
    {
        "id": "337b7eb273233879",
        "type": "set properties",
        "z": "f4c5f5daeb6378b8",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "Set state ",
        "propAll": true,
        "prop": "cf34a9983af3",
        "valueType": "msg",
        "value": "payload.properties.state",
        "x": 740,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b5109b484239a0b9",
        "type": "delay",
        "z": "f4c5f5daeb6378b8",
        "name": "",
        "pauseType": "delayv",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 360,
        "y": 20,
        "wires": [
            [
                "4a6b169fa5bfbc6c"
            ]
        ]
    },
    {
        "id": "437013b1a9a8441a",
        "type": "stop virtual device",
        "z": "9340536010ad11d6",
        "name": "Stop Elevator",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "x": 770,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "b2bec8a524b89e2a",
        "type": "start virtual device",
        "z": "9340536010ad11d6",
        "name": "Start Elevator",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "outputs": 1,
        "x": 352.2380561828613,
        "y": 385.99983978271484,
        "wires": [
            [
                "9ebd370f73c9da95"
            ]
        ]
    },
    {
        "id": "838e7255bce87ff1",
        "type": "ibmiot in",
        "z": "9340536010ad11d6",
        "authentication": "apiKey",
        "apiKey": "",
        "inputType": "cmd",
        "deviceId": "Elevator11",
        "applicationId": "",
        "deviceType": "Elevator",
        "eventType": "+",
        "commandType": "maintenance_command",
        "format": "json",
        "name": "On Maintenance Command",
        "service": "registered",
        "allDevices": false,
        "allApplications": "",
        "allDeviceTypes": false,
        "allEvents": true,
        "allCommands": false,
        "allFormats": "",
        "qos": 0,
        "x": 177.5000343322754,
        "y": 1647.5712299346924,
        "wires": [
            [
                "b02f50e9e5e68eed",
                "cec4ff866a2ec3d2"
            ]
        ]
    },
    {
        "id": "cec4ff866a2ec3d2",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set Maintenance Stop",
        "propAll": false,
        "prop": "1bd9b63f4b60",
        "valueType": "msg",
        "value": "payload.stop",
        "x": 444.0000190734863,
        "y": 1668.5712604522705,
        "wires": [
            []
        ]
    },
    {
        "id": "587fcb9cb55c897f",
        "type": "generate event",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "evt": "0612deed98b7",
        "name": "Send Status Event",
        "x": 670.5237007141113,
        "y": 1251.9997177124023,
        "wires": [
            [
                "990953fd52b6203d"
            ]
        ]
    },
    {
        "id": "6870493306cc3346",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Start Device",
        "info": "",
        "x": 355.2380599975586,
        "y": 342.4998388290405,
        "wires": []
    },
    {
        "id": "25e15cee54d6689b",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Stop Device",
        "info": "",
        "x": 122.2142219543457,
        "y": 1758.28564453125,
        "wires": []
    },
    {
        "id": "431ba37bf98c44c7",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Handle maintenance commands",
        "info": "",
        "x": 178.8808479309082,
        "y": 1597.9998397827148,
        "wires": []
    },
    {
        "id": "231eea6087646787",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "check if not in maintenance state",
        "func": "if(state === \"maintenance\"){\n    return [null, msg];\n}\nelse {\n    return [msg, msg];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 362.0595893859863,
        "y": 1240.9997329711914,
        "wires": [
            [
                "587fcb9cb55c897f"
            ],
            [
                "f5d994932f4b5b9f"
            ]
        ]
    },
    {
        "id": "f5d994932f4b5b9f",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 380.5952339172363,
        "y": 1312.571189880371,
        "wires": [
            [
                "231eea6087646787"
            ]
        ]
    },
    {
        "id": "b02f50e9e5e68eed",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set Maintenance Reason",
        "propAll": false,
        "prop": "bd4d2913cb07",
        "valueType": "msg",
        "value": "payload.reason",
        "x": 447.3571968078613,
        "y": 1629.5712451934814,
        "wires": [
            []
        ]
    },
    {
        "id": "30100b8736689246",
        "type": "generate event",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "evt": "21024c33b8dd",
        "name": "Send Maintenance Stop",
        "x": 806.5951728820801,
        "y": 1442.2856063842773,
        "wires": [
            [
                "990953fd52b6203d"
            ]
        ]
    },
    {
        "id": "d90a3968dae19488",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Switch States",
        "info": "",
        "x": 94.88090896606445,
        "y": 532.6664886474609,
        "wires": []
    },
    {
        "id": "01adba68f26edb08",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "1bd9b63f4b60"
        ],
        "name": "On Maintenance Stop",
        "x": 156.95232009887695,
        "y": 1442.1427097320557,
        "wires": [
            [
                "82e691179e5325d6"
            ]
        ]
    },
    {
        "id": "9ebd370f73c9da95",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "do initial settings",
        "func": "//Set bad MotorTemp (15% likelihood)\nvar outOfNormalRange = Math.random() * 100 < 15;\nif(outOfNormalRange){\n    maxMotorTemp = Math.floor(Math.random() * (220 - 185 + 1)) + 185;\n}\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 536.499927520752,
        "y": 407.571231842041,
        "wires": [
            [
                "8167576b72bdc7ee",
                "2704360e33b3e768",
                "9dd5135f0796fb22"
            ]
        ]
    },
    {
        "id": "82e691179e5325d6",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Reset maintenance reason ",
        "func": "if(maintenanceStop === false){\n    maintenanceReason = \"\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 408.8094367980957,
        "y": 1442.4281845092773,
        "wires": [
            [
                "316b58a90f8b8eb8"
            ]
        ]
    },
    {
        "id": "2a5a7aea73ffe2f8",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "*************************************** Device UI ***************************************",
        "info": "",
        "x": 420.73796463012695,
        "y": 1946.4998397827148,
        "wires": []
    },
    {
        "id": "99b48e73eaa2999b",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 322.5475311279297,
        "y": 2999.2854537963867,
        "wires": [
            [
                "888f00dfc29faf75",
                "34417843ae05c7ad",
                "a0b36521988d9c9d",
                "ef5031c248b9f3ab",
                "c1f66926c2325404",
                "1037a63a57d89400",
                "ec1f99c39d8742f1",
                "f82b2cb0eb648f66",
                "decce0626277b492",
                "51f5c70514bd8ec5",
                "c74c3f2686d1b68a",
                "1dfbe1eba7dce5b1",
                "f77a4829a356b19d",
                "da7e2b640a2f70e3",
                "bae1ecd36f8bdced",
                "bd9e7e19ad6cbfe7",
                "883fa3ba1295395b",
                "320f2e91d373c65b",
                "39ae91eb4d812651",
                "e65480a93afd808d",
                "9624a23835582f0b",
                "56fa4bd3002ce877",
                "9101db0b5ad976ca",
                "5f78841635879abe",
                "b55384910a74ecf2"
            ]
        ]
    },
    {
        "id": "888f00dfc29faf75",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.motorTemp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 443.30945205688477,
        "y": 2652.1427059173584,
        "wires": [
            [
                "6bacf846da071f2f"
            ]
        ]
    },
    {
        "id": "34417843ae05c7ad",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "Load",
        "label": "load (kg)",
        "format": "{{msg.payload.properties.load}}",
        "layout": "row-left",
        "x": 494.73801040649414,
        "y": 3191.999839782715,
        "wires": []
    },
    {
        "id": "a0b36521988d9c9d",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Cabin Speed",
        "label": "Cabin Speed (feet/sec)",
        "format": "{{msg.payload.properties.cabinSpeed}}",
        "layout": "row-left",
        "x": 503.73801040649414,
        "y": 3297.999839782715,
        "wires": []
    },
    {
        "id": "ef5031c248b9f3ab",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "State",
        "label": "State",
        "format": "{{msg.payload.properties.state}}",
        "layout": "row-left",
        "x": 487.4046974182129,
        "y": 3346.66658782959,
        "wires": []
    },
    {
        "id": "c1f66926c2325404",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Current Floor",
        "label": "Current Floor",
        "format": "{{msg.payload.properties.currentFloor}}",
        "layout": "row-left",
        "x": 462.0713653564453,
        "y": 3431.999849319458,
        "wires": []
    },
    {
        "id": "1037a63a57d89400",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Door open",
        "label": "Door open",
        "format": "{{msg.payload.properties.doorOpen}}",
        "layout": "row-left",
        "x": 476.40467834472656,
        "y": 3474.666519165039,
        "wires": []
    },
    {
        "id": "ec1f99c39d8742f1",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "Direction",
        "label": "Direction",
        "format": "{{msg.payload.properties.direction === 1 ? \"UP\" : \"DOWN\"}}",
        "layout": "row-left",
        "x": 555.7380256652832,
        "y": 3518.333152770996,
        "wires": []
    },
    {
        "id": "6bacf846da071f2f",
        "type": "ui_slider",
        "z": "9340536010ad11d6",
        "name": "Motor Temp",
        "label": "Motor Temp",
        "group": "6e95a768c6d35413",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": "120",
        "max": "220",
        "x": 634.0237159729004,
        "y": 2648.428415298462,
        "wires": [
            [
                "f9512d1b6dab3f53"
            ]
        ]
    },
    {
        "id": "f23f74aa4a58d093",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 284.30945205688477,
        "y": 2648.1427059173584,
        "wires": [
            [
                "888f00dfc29faf75"
            ]
        ]
    },
    {
        "id": "981ad5e96298b554",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 276.73802947998047,
        "y": 3198.999839782715,
        "wires": [
            [
                "34417843ae05c7ad"
            ]
        ]
    },
    {
        "id": "e6b031aeb9e86f6b",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 278.73802947998047,
        "y": 3251.999839782715,
        "wires": [
            [
                "9101db0b5ad976ca"
            ]
        ]
    },
    {
        "id": "b22e7b2edb1d7d02",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 305.73802947998047,
        "y": 3306.999839782715,
        "wires": [
            [
                "a0b36521988d9c9d"
            ]
        ]
    },
    {
        "id": "f2c957628b84721c",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 301.7380256652832,
        "y": 3349.999839782715,
        "wires": [
            [
                "ef5031c248b9f3ab"
            ]
        ]
    },
    {
        "id": "66b509a91f1cb062",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 308.73802947998047,
        "y": 3428.999839782715,
        "wires": [
            [
                "c1f66926c2325404"
            ]
        ]
    },
    {
        "id": "6da1821b84d8bca5",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 309.73802947998047,
        "y": 3484.999839782715,
        "wires": [
            [
                "1037a63a57d89400"
            ]
        ]
    },
    {
        "id": "8f947671b8ebf5d7",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 301.73802947998047,
        "y": 3528.999839782715,
        "wires": [
            [
                "ec1f99c39d8742f1"
            ]
        ]
    },
    {
        "id": "f9512d1b6dab3f53",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 806.4523277282715,
        "y": 2649.999855041504,
        "wires": [
            [
                "d9e570fbdbc195bb"
            ]
        ]
    },
    {
        "id": "82a5a4e703894748",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "e76a0e692587"
        ],
        "name": "On motor temp change",
        "x": 95.30945205688477,
        "y": 2647.142713546753,
        "wires": [
            [
                "f23f74aa4a58d093"
            ]
        ]
    },
    {
        "id": "c19b44a0b4fde56b",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "bcca0e31b9d6"
        ],
        "name": "On load  Change",
        "x": 99.73802947998047,
        "y": 3197.999839782715,
        "wires": [
            [
                "981ad5e96298b554"
            ]
        ]
    },
    {
        "id": "5f391323ff80b8c3",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "80cc3cb81053"
        ],
        "name": "On Cabin Temp  Change",
        "x": 110.73802947998047,
        "y": 3246.999839782715,
        "wires": [
            [
                "e6b031aeb9e86f6b"
            ]
        ]
    },
    {
        "id": "0e4c4a4286e98410",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "40741d3132a4"
        ],
        "name": "On Cabin Speed  Change",
        "x": 119.73802947998047,
        "y": 3306.999839782715,
        "wires": [
            [
                "b22e7b2edb1d7d02"
            ]
        ]
    },
    {
        "id": "4bd0a1985249d87c",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "745ce852562a"
        ],
        "name": "On State Change",
        "x": 90.7380256652832,
        "y": 3349.999839782715,
        "wires": [
            [
                "f2c957628b84721c"
            ]
        ]
    },
    {
        "id": "e0febe727be1c110",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "c2881d12e8f3"
        ],
        "name": "On Current floor  Change",
        "x": 122.73802947998047,
        "y": 3428.999839782715,
        "wires": [
            [
                "66b509a91f1cb062"
            ]
        ]
    },
    {
        "id": "6489e8b1b80d2e08",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "38416d39cffe"
        ],
        "name": "On Door Open  Change",
        "x": 113.73802947998047,
        "y": 3484.999839782715,
        "wires": [
            [
                "6da1821b84d8bca5"
            ]
        ]
    },
    {
        "id": "0b5b22509c68434a",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "297fd95abda8"
        ],
        "name": "On Direction Change",
        "x": 105.73802947998047,
        "y": 3528.999839782715,
        "wires": [
            [
                "8f947671b8ebf5d7"
            ]
        ]
    },
    {
        "id": "d9e570fbdbc195bb",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set motor Temp",
        "propAll": false,
        "prop": "e76a0e692587",
        "valueType": "msg",
        "value": "payload",
        "x": 993.0951957702637,
        "y": 2651.1427087783813,
        "wires": [
            []
        ]
    },
    {
        "id": "5f54e2d7d1bae33c",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 278.73802947998047,
        "y": 3111.999839782715,
        "wires": [
            [
                "5f78841635879abe"
            ]
        ]
    },
    {
        "id": "c6a9632cd1388d87",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "e76a0e692587"
        ],
        "name": "On motor temp change",
        "x": 108.73802947998047,
        "y": 3116.999839782715,
        "wires": [
            [
                "5f54e2d7d1bae33c"
            ]
        ]
    },
    {
        "id": "f2be03917b403196",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "80cc3cb81053"
        ],
        "name": "On Cabin Temp change",
        "x": 94.8808822631836,
        "y": 2588.4284133911133,
        "wires": [
            [
                "c815b37555e7f859"
            ]
        ]
    },
    {
        "id": "c815b37555e7f859",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 283.8808822631836,
        "y": 2589.4284057617188,
        "wires": [
            [
                "f82b2cb0eb648f66"
            ]
        ]
    },
    {
        "id": "f82b2cb0eb648f66",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.cabinTemp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 442.8808822631836,
        "y": 2593.4284057617188,
        "wires": [
            [
                "5d71d2a05c374e3a"
            ]
        ]
    },
    {
        "id": "5d71d2a05c374e3a",
        "type": "ui_slider",
        "z": "9340536010ad11d6",
        "name": "Cabin Temp",
        "label": "Cabin Temp",
        "group": "6e95a768c6d35413",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": "60",
        "max": "100",
        "x": 633.5951461791992,
        "y": 2589.7141151428223,
        "wires": [
            [
                "19e0d0572f4006d5"
            ]
        ]
    },
    {
        "id": "19e0d0572f4006d5",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 806.0237579345703,
        "y": 2591.2855548858643,
        "wires": [
            [
                "adeb7a338a467a48"
            ]
        ]
    },
    {
        "id": "adeb7a338a467a48",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set Cabin Temp",
        "propAll": false,
        "prop": "80cc3cb81053",
        "valueType": "msg",
        "value": "payload",
        "x": 992.6666259765625,
        "y": 2592.4284086227417,
        "wires": [
            []
        ]
    },
    {
        "id": "cf2f14fec7934887",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set Force Open Door Temp",
        "propAll": false,
        "prop": "717226438586",
        "valueType": "msg",
        "value": "payload",
        "x": 1029.095199584961,
        "y": 2724.142707824707,
        "wires": [
            []
        ]
    },
    {
        "id": "d152664cceb68481",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 819.5951652526855,
        "y": 2720.142707824707,
        "wires": [
            [
                "cf2f14fec7934887"
            ]
        ]
    },
    {
        "id": "decce0626277b492",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.forceOpenDoor",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 455.02379608154297,
        "y": 2719.4284324645996,
        "wires": [
            [
                "a87ef72784b63eae"
            ]
        ]
    },
    {
        "id": "5cf1913725a7b070",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 297.45234298706055,
        "y": 2721.142713546753,
        "wires": [
            [
                "decce0626277b492"
            ]
        ]
    },
    {
        "id": "95c4111eadb561b3",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "e76a0e692587"
        ],
        "name": "On force door open change",
        "x": 111.30945587158203,
        "y": 2720.1427125930786,
        "wires": [
            [
                "5cf1913725a7b070"
            ]
        ]
    },
    {
        "id": "a87ef72784b63eae",
        "type": "ui_switch",
        "z": "9340536010ad11d6",
        "name": "Force Open Door",
        "label": "Force Open Door",
        "group": "6e95a768c6d35413",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 651.3094482421875,
        "y": 2719.8569869995117,
        "wires": [
            [
                "d152664cceb68481"
            ]
        ]
    },
    {
        "id": "1933ebdbf30be6f2",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set maintenance stop",
        "propAll": false,
        "prop": "1bd9b63f4b60",
        "valueType": "msg",
        "value": "payload",
        "x": 1014.809497833252,
        "y": 2768.285545349121,
        "wires": [
            []
        ]
    },
    {
        "id": "4c3c8d45e7a953c3",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 813.309497833252,
        "y": 2770.285545349121,
        "wires": [
            [
                "1933ebdbf30be6f2",
                "a4489c02f17bad64"
            ]
        ]
    },
    {
        "id": "6d862a8bc89b912d",
        "type": "ui_switch",
        "z": "9340536010ad11d6",
        "name": "maintenanceStop",
        "label": "maintenanceStop",
        "group": "6e95a768c6d35413",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 657.0237579345703,
        "y": 2776.999824523926,
        "wires": [
            [
                "4c3c8d45e7a953c3"
            ]
        ]
    },
    {
        "id": "51f5c70514bd8ec5",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.maintenanceStop",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460.7381057739258,
        "y": 2776.5712699890137,
        "wires": [
            [
                "6d862a8bc89b912d"
            ]
        ]
    },
    {
        "id": "08d2080abeaaf825",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 303.16665267944336,
        "y": 2778.285551071167,
        "wires": [
            [
                "51f5c70514bd8ec5"
            ]
        ]
    },
    {
        "id": "510c1a4771675ee5",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "1bd9b63f4b60"
        ],
        "name": "On maintenanceStop change",
        "x": 117.02376556396484,
        "y": 2777.2855501174927,
        "wires": [
            [
                "08d2080abeaaf825"
            ]
        ]
    },
    {
        "id": "5bfe4b99796f7bb8",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "bd4d2913cb07"
        ],
        "name": "On Maintenance Reason Change",
        "x": 117.38090896606445,
        "y": 3570.999839782715,
        "wires": [
            [
                "fb3f9135427bb36a"
            ]
        ]
    },
    {
        "id": "fb3f9135427bb36a",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 326.38090896606445,
        "y": 3568.999839782715,
        "wires": [
            [
                "c74c3f2686d1b68a"
            ]
        ]
    },
    {
        "id": "c74c3f2686d1b68a",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "Maintenance Reason",
        "label": "Maintenance Reason",
        "format": "{{msg.payload.properties.maintenanceReason}}",
        "layout": "row-left",
        "x": 523.7142295837402,
        "y": 3574.6665019989014,
        "wires": []
    },
    {
        "id": "1dfbe1eba7dce5b1",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "2c6a2eb6ed7d54e2",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "Max Motor Temp",
        "label": "Max Motor Temp",
        "format": "{{msg.payload.properties.maxMotorTemp}}",
        "layout": "row-left",
        "x": 473.38090896606445,
        "y": 3157.999839782715,
        "wires": []
    },
    {
        "id": "4d06d79e52f8aa2a",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 296.38090896606445,
        "y": 3154.999839782715,
        "wires": [
            [
                "1dfbe1eba7dce5b1"
            ]
        ]
    },
    {
        "id": "fec6cbe9eecb2730",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "efd6898dd4db"
        ],
        "name": "On max motor temp change",
        "x": 107.38090896606445,
        "y": 3155.999839782715,
        "wires": [
            [
                "4d06d79e52f8aa2a"
            ]
        ]
    },
    {
        "id": "92e5d7d603cc1e7b",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "efd6898dd4db"
        ],
        "name": "On Max Motor temp change",
        "x": 107.38090896606445,
        "y": 2683.999839782715,
        "wires": [
            [
                "24ed1a8a6012aa7c"
            ]
        ]
    },
    {
        "id": "24ed1a8a6012aa7c",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 295.38090896606445,
        "y": 2684.9998321533203,
        "wires": [
            [
                "da7e2b640a2f70e3"
            ]
        ]
    },
    {
        "id": "da7e2b640a2f70e3",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.maxMotorTemp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 455.38090896606445,
        "y": 2684.999839782715,
        "wires": [
            [
                "52e362e8f81b787d"
            ]
        ]
    },
    {
        "id": "52e362e8f81b787d",
        "type": "ui_slider",
        "z": "9340536010ad11d6",
        "name": "Max Motor Temp",
        "label": "Max Motor Temp",
        "group": "6e95a768c6d35413",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": "141",
        "max": "220",
        "x": 665.0951728820801,
        "y": 2685.285541534424,
        "wires": [
            [
                "0ab578352f23e20b"
            ]
        ]
    },
    {
        "id": "0ab578352f23e20b",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 817.5237846374512,
        "y": 2686.856981277466,
        "wires": [
            [
                "8d610bd5ba87119d"
            ]
        ]
    },
    {
        "id": "8d610bd5ba87119d",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set max motor Temp",
        "propAll": false,
        "prop": "efd6898dd4db",
        "valueType": "msg",
        "value": "payload",
        "x": 1024.1666526794434,
        "y": 2687.9998350143433,
        "wires": [
            []
        ]
    },
    {
        "id": "36e64ae50d9d2b32",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "c15961c2f7bf"
        ],
        "name": "On Next Stop",
        "x": 84.38090896606445,
        "y": 3394.999839782715,
        "wires": [
            [
                "518af6f73e2fbfc5"
            ]
        ]
    },
    {
        "id": "518af6f73e2fbfc5",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 310.38090896606445,
        "y": 3394.999839782715,
        "wires": [
            [
                "bae1ecd36f8bdced"
            ]
        ]
    },
    {
        "id": "bae1ecd36f8bdced",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "Next Stop",
        "label": "Next Stop",
        "format": "{{msg.payload.properties.gotoFloor}}",
        "layout": "row-left",
        "x": 463.71422958374023,
        "y": 3396.3331623077393,
        "wires": []
    },
    {
        "id": "43a4bb5e41e13990",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "bcca0e31b9d6"
        ],
        "name": "On load change",
        "x": 80.71423721313477,
        "y": 2543.3331718444824,
        "wires": [
            [
                "8a4de431275facca"
            ]
        ]
    },
    {
        "id": "8a4de431275facca",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 289.71423721313477,
        "y": 2544.333164215088,
        "wires": [
            [
                "f77a4829a356b19d"
            ]
        ]
    },
    {
        "id": "f77a4829a356b19d",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.load",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 448.71423721313477,
        "y": 2548.333164215088,
        "wires": [
            [
                "73eb17ffa99b4420"
            ]
        ]
    },
    {
        "id": "73eb17ffa99b4420",
        "type": "ui_slider",
        "z": "9340536010ad11d6",
        "name": "Load",
        "label": "Load",
        "group": "6e95a768c6d35413",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": "0",
        "max": "2000",
        "x": 619.4285011291504,
        "y": 2544.6188735961914,
        "wires": [
            [
                "3e382b6d04ce65d2"
            ]
        ]
    },
    {
        "id": "3e382b6d04ce65d2",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 811.8571128845215,
        "y": 2546.1903133392334,
        "wires": [
            [
                "59f90215872d2116"
            ]
        ]
    },
    {
        "id": "59f90215872d2116",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set Load",
        "propAll": false,
        "prop": "bcca0e31b9d6",
        "valueType": "msg",
        "value": "payload",
        "x": 978.4999809265137,
        "y": 2547.333167076111,
        "wires": [
            []
        ]
    },
    {
        "id": "23adb37c5aece76c",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "438e94df7c4a"
        ],
        "name": "On Min Motor temp change",
        "x": 114.04756546020508,
        "y": 2834.999839782715,
        "wires": [
            [
                "2a5dbbf9402848a2"
            ]
        ]
    },
    {
        "id": "2a5dbbf9402848a2",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 302.0475654602051,
        "y": 2835.9998321533203,
        "wires": [
            [
                "bd9e7e19ad6cbfe7"
            ]
        ]
    },
    {
        "id": "bd9e7e19ad6cbfe7",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.minMotorTemp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 462.0475654602051,
        "y": 2835.999839782715,
        "wires": [
            [
                "c394befb48fb368e"
            ]
        ]
    },
    {
        "id": "c394befb48fb368e",
        "type": "ui_slider",
        "z": "9340536010ad11d6",
        "name": "Min Motor Temp",
        "label": "Min Motor Temp",
        "group": "6e95a768c6d35413",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": "100",
        "max": "140",
        "x": 661.7618293762207,
        "y": 2836.285541534424,
        "wires": [
            [
                "384ccf98f2c2353a"
            ]
        ]
    },
    {
        "id": "384ccf98f2c2353a",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 824.1904411315918,
        "y": 2837.856981277466,
        "wires": [
            [
                "3148b3b8b78c4149"
            ]
        ]
    },
    {
        "id": "3148b3b8b78c4149",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set min motor Temp",
        "propAll": false,
        "prop": "438e94df7c4a",
        "valueType": "msg",
        "value": "payload",
        "x": 1030.833309173584,
        "y": 2838.9998350143433,
        "wires": [
            []
        ]
    },
    {
        "id": "883fa3ba1295395b",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "2c6a2eb6ed7d54e2",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "Min Motor Temp",
        "label": "Min Motor Temp",
        "format": "{{msg.payload.properties.minMotorTemp}}",
        "layout": "row-left",
        "x": 724.7142066955566,
        "y": 3044.6664657592773,
        "wires": []
    },
    {
        "id": "06a82fe1aabe9cca",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 309.71423721313477,
        "y": 3068.6664962768555,
        "wires": [
            [
                "883fa3ba1295395b"
            ]
        ]
    },
    {
        "id": "2f8e280446519bd5",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "438e94df7c4a"
        ],
        "name": "On min motor temp change",
        "x": 120.71423721313477,
        "y": 3069.6664962768555,
        "wires": [
            [
                "06a82fe1aabe9cca"
            ]
        ]
    },
    {
        "id": "f6bc46ac1fe1042b",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "2b397533cfa2"
        ],
        "name": "curtainOfLightBreak Change",
        "x": 107.38090896606445,
        "y": 3642.999839782715,
        "wires": [
            [
                "0f597ae56b50d762"
            ]
        ]
    },
    {
        "id": "0f597ae56b50d762",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 326.38090896606445,
        "y": 3640.999839782715,
        "wires": [
            [
                "320f2e91d373c65b"
            ]
        ]
    },
    {
        "id": "320f2e91d373c65b",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "curtain Of Light Break",
        "label": "Curtain Of LightBreak",
        "format": "{{msg.payload.properties.curtainOfLightBreak}}",
        "layout": "row-left",
        "x": 523.7142295837402,
        "y": 3646.6665019989014,
        "wires": []
    },
    {
        "id": "197177add66ff697",
        "type": "ui_gauge",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "a51fb204e1cbfb07",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Motor Temp",
        "label": "Motor Temp",
        "format": "{{value | number:1}}°F",
        "min": "130",
        "max": "200.00",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 985.8808937072754,
        "y": 3126.999839782715,
        "wires": []
    },
    {
        "id": "9ca11a1d13871867",
        "type": "ui_gauge",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "a51fb204e1cbfb07",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Cabin Temp",
        "label": "°F",
        "format": "{{value}}°F",
        "min": "50",
        "max": "140",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 992.0059547424316,
        "y": 3177.124839782715,
        "wires": []
    },
    {
        "id": "87d799e356017463",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set maintenance Reason",
        "propAll": false,
        "prop": "bd4d2913cb07",
        "valueType": "msg",
        "value": "payload",
        "x": 1138.3809089660645,
        "y": 2802.999839782715,
        "wires": [
            []
        ]
    },
    {
        "id": "a4489c02f17bad64",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "Set maintenance reason ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "manual",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 899.8809089660645,
        "y": 2802.999839782715,
        "wires": [
            [
                "87d799e356017463"
            ]
        ]
    },
    {
        "id": "39ae91eb4d812651",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "a51fb204e1cbfb07",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "cleanessOfFloor",
        "label": "Cleaness of floor",
        "format": "{{msg.payload.properties.cleanessOfFloor}}",
        "layout": "row-left",
        "x": 503.71422958374023,
        "y": 3699.999839782715,
        "wires": []
    },
    {
        "id": "c5054e7f8fbeff16",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 326.38090896606445,
        "y": 3694.3331775665283,
        "wires": [
            [
                "39ae91eb4d812651"
            ]
        ]
    },
    {
        "id": "bbb3faa2c71562f0",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "299639e87d50"
        ],
        "name": "cleanessOfFloor Change",
        "x": 97.38090896606445,
        "y": 3696.3331775665283,
        "wires": [
            [
                "c5054e7f8fbeff16"
            ]
        ]
    },
    {
        "id": "53e5057f55d79afa",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "459e0d4c3af6"
        ],
        "name": "On curtainOfLightBreakRate",
        "x": 134.04756546020508,
        "y": 2908.333152770996,
        "wires": [
            [
                "6ad5c04c75a96e4d"
            ]
        ]
    },
    {
        "id": "6ad5c04c75a96e4d",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 322.0475654602051,
        "y": 2909.3331451416016,
        "wires": [
            [
                "e65480a93afd808d"
            ]
        ]
    },
    {
        "id": "e65480a93afd808d",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.curtainOfLightBreakRate",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 482.0475654602051,
        "y": 2909.333152770996,
        "wires": [
            [
                "1c78321df47e271f"
            ]
        ]
    },
    {
        "id": "1c78321df47e271f",
        "type": "ui_slider",
        "z": "9340536010ad11d6",
        "name": "Curtain of Light Break Rate",
        "label": "Curtain of Light Break Rate",
        "group": "6e95a768c6d35413",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": "10",
        "max": "20",
        "x": 723.4284858703613,
        "y": 2917.9521884918213,
        "wires": [
            [
                "5473ca90b1324765"
            ]
        ]
    },
    {
        "id": "5473ca90b1324765",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910.8570976257324,
        "y": 2904.5236206054688,
        "wires": [
            [
                "25e0e14b9693382e"
            ]
        ]
    },
    {
        "id": "25e0e14b9693382e",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set Curtain of Light Break Rate",
        "propAll": false,
        "prop": "459e0d4c3af6",
        "valueType": "msg",
        "value": "payload",
        "x": 1130.8333015441895,
        "y": 2905.666473388672,
        "wires": [
            []
        ]
    },
    {
        "id": "9624a23835582f0b",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "2c6a2eb6ed7d54e2",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "Curtain of Light Break Rate",
        "label": "Curtain of Light Break Rate",
        "format": "{{msg.payload.properties.curtainOfLightBreakRate}}",
        "layout": "row-left",
        "x": 710.3809089660645,
        "y": 3766.6665172576904,
        "wires": []
    },
    {
        "id": "d8abcb3174421d75",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 408.04758071899414,
        "y": 3760.999849319458,
        "wires": [
            [
                "9624a23835582f0b"
            ]
        ]
    },
    {
        "id": "ae10073f418df3a8",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "459e0d4c3af6"
        ],
        "name": "On Curtain of Light Break Rate Change",
        "x": 137.38090896606445,
        "y": 3766.3331775665283,
        "wires": [
            [
                "d8abcb3174421d75"
            ]
        ]
    },
    {
        "id": "56fa4bd3002ce877",
        "type": "ui_text",
        "z": "9340536010ad11d6",
        "group": "2c6a2eb6ed7d54e2",
        "order": 18,
        "width": 0,
        "height": 0,
        "name": "floorStopReq",
        "label": "Next Stops",
        "format": "{{msg.payload.properties.floorStopReq}}",
        "layout": "row-left",
        "x": 660.3809089660645,
        "y": 3829.999839782715,
        "wires": []
    },
    {
        "id": "a274fe11b2a376b5",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 408.04758071899414,
        "y": 3824.3331718444824,
        "wires": [
            [
                "56fa4bd3002ce877"
            ]
        ]
    },
    {
        "id": "9daf503937125423",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "7fa0c8927a50"
        ],
        "name": "On Floor Req Change",
        "x": 87.38090896606445,
        "y": 3829.6665000915527,
        "wires": [
            [
                "a274fe11b2a376b5"
            ]
        ]
    },
    {
        "id": "75587f756cd86aad",
        "type": "ui_button",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "ec0b46526aa9ef15",
        "order": 2,
        "width": "1",
        "height": "1",
        "label": "0",
        "color": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "",
        "x": 76.88090896606445,
        "y": 2189.9999618530273,
        "wires": [
            [
                "d33b8010853a0ff4"
            ]
        ]
    },
    {
        "id": "5b9660c601361393",
        "type": "ui_button",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "ec0b46526aa9ef15",
        "order": 3,
        "width": "1",
        "height": "1",
        "label": "1",
        "color": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "x": 81.38090896606445,
        "y": 2223.9999618530273,
        "wires": [
            [
                "d33b8010853a0ff4"
            ]
        ]
    },
    {
        "id": "64703a5a81ba77a5",
        "type": "ui_button",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "ec0b46526aa9ef15",
        "order": 4,
        "width": "1",
        "height": "1",
        "label": "2",
        "color": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 83.38090896606445,
        "y": 2256.9999618530273,
        "wires": [
            [
                "d33b8010853a0ff4"
            ]
        ]
    },
    {
        "id": "ae90afe2e0a10565",
        "type": "ui_button",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "ec0b46526aa9ef15",
        "order": 5,
        "width": "1",
        "height": "1",
        "label": "3",
        "color": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "",
        "x": 84.38090896606445,
        "y": 2290.9999618530273,
        "wires": [
            [
                "d33b8010853a0ff4"
            ]
        ]
    },
    {
        "id": "a16fe0e1bc8a3453",
        "type": "ui_button",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "ec0b46526aa9ef15",
        "order": 6,
        "width": "1",
        "height": "1",
        "label": "4",
        "color": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "",
        "x": 85.38090896606445,
        "y": 2325.9999618530273,
        "wires": [
            [
                "d33b8010853a0ff4"
            ]
        ]
    },
    {
        "id": "8b0fbe090c96ebfb",
        "type": "ui_button",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "ec0b46526aa9ef15",
        "order": 7,
        "width": "1",
        "height": "1",
        "label": "5",
        "color": "",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "",
        "x": 89.38090896606445,
        "y": 2359.9999618530273,
        "wires": [
            [
                "d33b8010853a0ff4"
            ]
        ]
    },
    {
        "id": "737b49edf40a5e7c",
        "type": "ui_button",
        "z": "9340536010ad11d6",
        "name": "",
        "group": "ec0b46526aa9ef15",
        "order": 8,
        "width": "1",
        "height": "1",
        "label": "6",
        "color": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "",
        "x": 90.38090896606445,
        "y": 2391.9999618530273,
        "wires": [
            [
                "d33b8010853a0ff4"
            ]
        ]
    },
    {
        "id": "d33b8010853a0ff4",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 286.38090896606445,
        "y": 2250.9999618530273,
        "wires": [
            [
                "fa96c26604c2fa7c"
            ]
        ]
    },
    {
        "id": "fa96c26604c2fa7c",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Add floor stop",
        "func": "floorStopReq.push(msg.payload);\nfloorStopReq.touch();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 494.88090896606445,
        "y": 2247.9999618530273,
        "wires": [
            []
        ]
    },
    {
        "id": "5f78841635879abe",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.motorTemp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 785.9999122619629,
        "y": 3134.333335876465,
        "wires": [
            [
                "197177add66ff697"
            ]
        ]
    },
    {
        "id": "9101db0b5ad976ca",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.cabinTemp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 815.9999122619629,
        "y": 3200.3332138061523,
        "wires": [
            [
                "9ca11a1d13871867"
            ]
        ]
    },
    {
        "id": "9e1e26a722719c4b",
        "type": "link in",
        "z": "9340536010ad11d6",
        "name": "Reset Values",
        "links": [
            "208b03c8.73255c",
            "6f8e98051e666bd1"
        ],
        "x": 199.8571014404297,
        "y": 2997.9998264312744,
        "wires": [
            [
                "99b48e73eaa2999b"
            ]
        ]
    },
    {
        "id": "c0c46a20d31b9ce8",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Reset values (when a devices is created or active device is changed",
        "info": "",
        "x": 272.7142219543457,
        "y": 2958.476058959961,
        "wires": []
    },
    {
        "id": "fa03dba1afe84fac",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Send 'Status' event each 5 sec if not in Maintenance State",
        "info": "",
        "x": 524.0240364074707,
        "y": 1211.9522323608398,
        "wires": []
    },
    {
        "id": "8167576b72bdc7ee",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set state to idle",
        "propAll": false,
        "prop": "745ce852562a",
        "valueType": "str",
        "value": "idle",
        "x": 806.452320098877,
        "y": 417.04747009277344,
        "wires": [
            [
                "070e34b5ff4df6a6"
            ]
        ]
    },
    {
        "id": "d3abca9cd0dfbbc5",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set state to off",
        "propAll": false,
        "prop": "745ce852562a",
        "valueType": "str",
        "value": "off",
        "x": 568.8332481384277,
        "y": 1803.4166259765625,
        "wires": [
            [
                "437013b1a9a8441a"
            ]
        ]
    },
    {
        "id": "990953fd52b6203d",
        "type": "ibmiot out",
        "z": "9340536010ad11d6",
        "authentication": "boundService",
        "apiKey": "",
        "outputType": "evt",
        "deviceId": "frompayload",
        "deviceType": "0.14.6",
        "eventCommandType": "frompayload",
        "format": "json",
        "data": "{}",
        "qos": 0,
        "name": "IBM IoT",
        "service": "registered",
        "x": 1024.881061553955,
        "y": 1335.3808212280273,
        "wires": []
    },
    {
        "id": "316b58a90f8b8eb8",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 613.1665840148926,
        "y": 1442.2856063842773,
        "wires": [
            [
                "30100b8736689246"
            ]
        ]
    },
    {
        "id": "4e48e9191549ec12",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "Switch State",
        "property": "payload.properties.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "moving",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stopped",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "loading",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "maintenance",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 207.1666145324707,
        "y": 630.3332214355469,
        "wires": [
            [
                "24bf49474f60003f"
            ],
            [
                "ecda968b9b8376a3"
            ],
            [
                "f3f10be4d4b59b6d"
            ],
            [
                "5437f0823e27e99a"
            ],
            [
                "a712edc23881d084"
            ]
        ]
    },
    {
        "id": "24bf49474f60003f",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "idle",
        "func": "if(!forceOpenDoor)\n    doorOpen = false;\ndirection = 0;\n//cool down motor\nvar newMotorTemp = motorTemp - 0.05;\nmotorTemp = (newMotorTemp < minMotorTemp) ? minMotorTemp : (newMotorTemp > maxMotorTemp) ? maxMotorTemp :newMotorTemp;\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 458.33330154418945,
        "y": 645.9998931884766,
        "wires": [
            [
                "ee09bab6aa1788a7"
            ]
        ]
    },
    {
        "id": "a712edc23881d084",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Maintenance ",
        "func": "doorOpen = true;\ndirection = 0;\nvar newMotorTemp = motorTemp - 0.2;\nmotorTemp = (newMotorTemp < minMotorTemp) ? minMotorTemp : (newMotorTemp > maxMotorTemp) ? maxMotorTemp : newMotorTemp;\n;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 455.3332710266113,
        "y": 1056.333236694336,
        "wires": [
            [
                "4b441c4a4c2249c6"
            ]
        ]
    },
    {
        "id": "4b441c4a4c2249c6",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "maintenance Stop For 10 minutes ",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "minutes",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 707.999927520752,
        "y": 1054.999984741211,
        "wires": [
            [
                "d8f4b0afdaca23b6"
            ]
        ]
    },
    {
        "id": "d8f4b0afdaca23b6",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Done Maintenance Stop",
        "func": "if(maintenanceStop){//if still in maintenanceStop (was not canceled)\n    maintenanceStop = false;\n    maintenanceReason = \"\";\n    return msg;\n}\nelse\n    return null;",
        "outputs": "1",
        "noerr": 0,
        "x": 982.999927520752,
        "y": 1053.9999237060547,
        "wires": [
            [
                "c5e586ac2eb55ba7"
            ]
        ]
    },
    {
        "id": "c5e586ac2eb55ba7",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "calc next state",
        "func": "var nextState = null;\nswitch(state){\ncase \"idle\":\n\tif(maintenanceStop){\n\t\tnextState = \"maintenance\";\n\t}\n\telse if(floorStopReq.length > 0){\n\t\tnextState = \"moving\";\t\t\n\t}\n\telse{\n\t\tnextState = \"idle\"\n\t}\n\tbreak;\n\t\ncase \"moving\":\n\tnextState = \"stopped\";\n\tbreak;\n\t\ncase \"stopped\":\n\tnextState = \"loading\";\n\tbreak;\n\t\ncase \"loading\":\n\tif(maintenanceStop){\n\t\tnextState = \"maintenance\";\n\t}\n\telse if(floorStopReq.length > 0){\n\t\tnextState = \"moving\";\t\t\n\t}\n\telse{\n\t\tnextState = \"idle\";\t\t\n\t}\n\tbreak;\n\t\ncase \"maintenance\":\n\tnextState = \"idle\";\n\tbreak;\n\t\ndefault:\n    var err = \"unknow state: \" + state;\n    node.error(err);\n\tnode.status({fill:\"red\",shape:\"ring\",text: err});\n\treturn null;\n}\nnode.status({fill:\"green\",shape:\"ring\",text: msg.deviceId + \":\" + nextState});\nmsg.payload.properties = {state: nextState};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1114.1665840148926,
        "y": 743.6665878295898,
        "wires": [
            [
                "26685c02be9d7953"
            ]
        ]
    },
    {
        "id": "9372e6c68e7dab36",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "moving",
        "func": "//increase cabin speed\nif(cabinSpeed <15){\ncabinSpeed = ( (cabinSpeed + 4) <= 14) ? cabinSpeed + 4 : 14;\n}\n\n//increase motor tepm\nvar newMotorTemp = motorTemp + 0.02;\nmotorTemp = (newMotorTemp < minMotorTemp) ? minMotorTemp : (newMotorTemp > maxMotorTemp) ? maxMotorTemp :newMotorTemp;\n\n//update current floor\nvar nextFloor = currentFloor + direction;\n//make sure floor is in range \nif(nextFloor < 0){\n    direction = 1;\n    currentFloor = 0;\n} \nelse if(nextFloor > numberOfFloors){\n    direction = -1;\n    currentFloor = numberOfFloors;\n}\nelse{//set as current floor\n    currentFloor = nextFloor;\n}\n\n//if maintenanceStop is set the stop at this floor\nif(maintenanceStop)\n    gotoFloor = currentFloor;\n\n//check if need to stop\nif(currentFloor === gotoFloor){\n    return [msg, null];//stop\n}\nelse{//keep moving\n    return [null,msg];//keep moving \n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 852.9999046325684,
        "y": 757.6665954589844,
        "wires": [
            [
                "c5e586ac2eb55ba7"
            ],
            [
                "5f2a55736098722d"
            ]
        ]
    },
    {
        "id": "5f2a55736098722d",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "moving 3 sec per floor ",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 820.9998359680176,
        "y": 806.666633605957,
        "wires": [
            [
                "9372e6c68e7dab36"
            ]
        ]
    },
    {
        "id": "ecda968b9b8376a3",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "moving (start)",
        "func": "\nif(!forceOpenDoor){\n    doorOpen = false;\n}\n//set dest floor\ndo {\n    gotoFloor = floorStopReq.shift();\n}\nwhile(gotoFloor === currentFloor);//filter out req to current floor\nfloorStopReq.touch();\ndirection = (gotoFloor > currentFloor) ? 1 : -1;\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 469.6665840148926,
        "y": 753.3333282470703,
        "wires": [
            [
                "4ed2fa5979ed96af"
            ]
        ]
    },
    {
        "id": "4ed2fa5979ed96af",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "Start moving  3 sec",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 669.6665840148926,
        "y": 755.3333282470703,
        "wires": [
            [
                "9372e6c68e7dab36"
            ]
        ]
    },
    {
        "id": "ee09bab6aa1788a7",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "Ideal state 10 sec",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 663.6666145324707,
        "y": 647.3332366943359,
        "wires": [
            [
                "c5e586ac2eb55ba7"
            ]
        ]
    },
    {
        "id": "f3f10be4d4b59b6d",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Stopping",
        "func": "doorOpen = true;\ncabinSpeed = 0;\nreturn msg;\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 453.00004959106445,
        "y": 882.3332366943359,
        "wires": [
            [
                "fceae86dd550be53"
            ]
        ]
    },
    {
        "id": "fceae86dd550be53",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "stopped state 6 sec",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 692.9999580383301,
        "y": 884.3332366943359,
        "wires": [
            [
                "c5e586ac2eb55ba7"
            ]
        ]
    },
    {
        "id": "5437f0823e27e99a",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "loading",
        "func": "//if in maintenanceStop put all people out\nif(maintenanceStop){\n    load = 0;\n    return msg;\n}\n\n//else load & unload poeple (70kg avg each)\nvar minPersonsIn = (load === 0) ? 1 : 0;\nvar personsIn = Math.floor(Math.random() * (4 - minPersonsIn + 1)) + minPersonsIn;\nvar personsOut = Math.floor(Math.random() * (Math.floor(load/70) + 1));\nvar newLoad = load + (personsIn*70) - (personsOut*70);\nload = (newLoad < 0) ? 0 : newLoad;\n\n//curtainOfLightBreak every 10 stops \nif(curtainOfLightBreak !== 1){\n    curtainOfLightBreakCount++;\n    if(curtainOfLightBreakCount === curtainOfLightBreakRate){\n        curtainOfLightBreakCount = 0;\n        curtainOfLightBreak = 1;\n    }\n}\n\nreturn msg;\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 450.6666145324707,
        "y": 977.9998626708984,
        "wires": [
            [
                "c90b43c9290192d3"
            ]
        ]
    },
    {
        "id": "c90b43c9290192d3",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "loading state 8 sec",
        "pauseType": "delay",
        "timeout": "8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 636.3333549499512,
        "y": 977.6665344238281,
        "wires": [
            [
                "3b7eff0d1294c118"
            ]
        ]
    },
    {
        "id": "3b7eff0d1294c118",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "reset curtainOfLightBreak",
        "func": "curtainOfLightBreak = 0;\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 873.9761848449707,
        "y": 979.6665191650391,
        "wires": [
            [
                "c5e586ac2eb55ba7"
            ]
        ]
    },
    {
        "id": "4270fd68b7c0e7b2",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Idle State",
        "info": "",
        "x": 448.3332710266113,
        "y": 608.6664886474609,
        "wires": []
    },
    {
        "id": "0d85f66b046474c6",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Moving State",
        "info": "",
        "x": 461.3332710266113,
        "y": 720.6664962768555,
        "wires": []
    },
    {
        "id": "9d7afd752f4e6249",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Stopping State",
        "info": "",
        "x": 467.3332710266113,
        "y": 849.6665191650391,
        "wires": []
    },
    {
        "id": "03fcb1f864899587",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Loading State",
        "info": "",
        "x": 456.3332710266113,
        "y": 943.6665267944336,
        "wires": []
    },
    {
        "id": "7bfda2e811f57596",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Maintenance State",
        "info": "",
        "x": 479.3332710266113,
        "y": 1023.6665267944336,
        "wires": []
    },
    {
        "id": "88fe3dfe6c869481",
        "type": "link in",
        "z": "9340536010ad11d6",
        "name": "Switch State",
        "links": [
            "070e34b5ff4df6a6"
        ],
        "x": 151.49994277954102,
        "y": 561.9998626708984,
        "wires": [
            [
                "4e48e9191549ec12"
            ]
        ]
    },
    {
        "id": "070e34b5ff4df6a6",
        "type": "link out",
        "z": "9340536010ad11d6",
        "name": "Switch State",
        "links": [
            "88fe3dfe6c869481"
        ],
        "x": 1212.785758972168,
        "y": 593.3331623077393,
        "wires": []
    },
    {
        "id": "f89db7eed84bf89c",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Switch States",
        "info": "",
        "x": 1302.6189918518066,
        "y": 591.6665019989014,
        "wires": []
    },
    {
        "id": "07a6dd0b142e3dc4",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Send Events",
        "info": "",
        "x": 106.61898422241211,
        "y": 1164.9522323608398,
        "wires": []
    },
    {
        "id": "45a4ae14a3d014d3",
        "type": "link in",
        "z": "9340536010ad11d6",
        "name": "Send Events",
        "links": [
            "2704360e33b3e768"
        ],
        "x": 139.57138442993164,
        "y": 1202.9046249389648,
        "wires": [
            [
                "231eea6087646787"
            ]
        ]
    },
    {
        "id": "2704360e33b3e768",
        "type": "link out",
        "z": "9340536010ad11d6",
        "name": "Send Events",
        "links": [
            "45a4ae14a3d014d3"
        ],
        "x": 705.9998664855957,
        "y": 337.52364349365234,
        "wires": []
    },
    {
        "id": "9381195c7f4b4a3e",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Start Status Events",
        "info": "",
        "x": 816.9046821594238,
        "y": 339.0950927734375,
        "wires": []
    },
    {
        "id": "5c1c01c158619c0b",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Send 'Maintenance' event when occured",
        "info": "",
        "x": 211.04753494262695,
        "y": 1404.6665840148926,
        "wires": []
    },
    {
        "id": "26685c02be9d7953",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set state ",
        "propAll": false,
        "prop": "745ce852562a",
        "valueType": "msg",
        "value": "payload.properties.state",
        "x": 1218.666633605957,
        "y": 677.2498455047607,
        "wires": [
            [
                "070e34b5ff4df6a6"
            ]
        ]
    },
    {
        "id": "0ac34be01a601fe9",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "1bd9b63f4b60"
        ],
        "name": "On Maintenance Stop Change",
        "x": 807.3332099914551,
        "y": 1104.999870300293,
        "wires": [
            [
                "c807f9c2be140b07"
            ]
        ]
    },
    {
        "id": "c807f9c2be140b07",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "on Cancel Maintenance Stop ",
        "func": "if(maintenanceStop === false && state === \"maintenance\")\n    return msg;\nelse\n    return null;",
        "outputs": "1",
        "noerr": 0,
        "x": 1096.333209991455,
        "y": 1104.3332443237305,
        "wires": [
            [
                "c5e586ac2eb55ba7"
            ]
        ]
    },
    {
        "id": "b5566aaf4fa512e4",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "b6e56c3f.e8dd1",
        "props": [
            "3e84a9a94615"
        ],
        "name": "On auto floors selection change",
        "x": 117.38090896606445,
        "y": 2446.999839782715,
        "wires": [
            [
                "9d80df8b47621b8d"
            ]
        ]
    },
    {
        "id": "9d80df8b47621b8d",
        "type": "switch",
        "z": "9340536010ad11d6",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 313.52379608154297,
        "y": 2449.999840736389,
        "wires": [
            [
                "b55384910a74ecf2"
            ]
        ]
    },
    {
        "id": "b55384910a74ecf2",
        "type": "change",
        "z": "9340536010ad11d6",
        "name": "format payload",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.autoFloorSelection",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 471.0952491760254,
        "y": 2448.285559654236,
        "wires": [
            [
                "10324c780ec99644"
            ]
        ]
    },
    {
        "id": "10324c780ec99644",
        "type": "ui_switch",
        "z": "9340536010ad11d6",
        "name": "Auto Floors Selection",
        "label": "Auto Floors Selection",
        "group": "ec0b46526aa9ef15",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 677.3809013366699,
        "y": 2448.714114189148,
        "wires": [
            [
                "f472337f7509eda9"
            ]
        ]
    },
    {
        "id": "f472337f7509eda9",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 845.6666450500488,
        "y": 2444.999839782715,
        "wires": [
            [
                "829f7ce11252d08d"
            ]
        ]
    },
    {
        "id": "829f7ce11252d08d",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Set auto floors selection ",
        "propAll": false,
        "prop": "3e84a9a94615",
        "valueType": "msg",
        "value": "payload",
        "x": 1047.1666450500488,
        "y": 2435.999839782715,
        "wires": [
            []
        ]
    },
    {
        "id": "9dd5135f0796fb22",
        "type": "link out",
        "z": "9340536010ad11d6",
        "name": "Auto Floor Selection",
        "links": [
            "71e1e28a.d7a07c",
            "c0129d608d5f32b7"
        ],
        "x": 690.6666145324707,
        "y": 478.66648864746094,
        "wires": []
    },
    {
        "id": "71515d0554a94b6c",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Auto Floor Selection",
        "info": "",
        "x": 795.5715217590332,
        "y": 477.2379379272461,
        "wires": []
    },
    {
        "id": "c0129d608d5f32b7",
        "type": "link in",
        "z": "9340536010ad11d6",
        "name": "Auto Floor Selection",
        "links": [
            "9dd5135f0796fb22"
        ],
        "x": 76.99986839294434,
        "y": 1534.666431427002,
        "wires": [
            [
                "b84920a921a688ca"
            ]
        ]
    },
    {
        "id": "b20f7a4ac14ec024",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Auto Floor Selection",
        "info": "",
        "x": 146.3214111328125,
        "y": 1499.1544666290283,
        "wires": []
    },
    {
        "id": "3731d7344acf54fc",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 665.4998970031738,
        "y": 1550.4164657592773,
        "wires": [
            [
                "b84920a921a688ca"
            ]
        ]
    },
    {
        "id": "b84920a921a688ca",
        "type": "device function",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "Add floor stop",
        "func": "if(!autoFloorSelection)//autoFloorSelection disabled\n    return msg;\n    \nvar floor = Math.floor(Math.random() * (numberOfFloors - 1));\nif(floorStopReq.indexOf(floor) === -1){\n    floorStopReq.push(floor);\n    floorStopReq.touch();\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 353.49992752075195,
        "y": 1536.1664657592773,
        "wires": [
            [
                "3731d7344acf54fc"
            ]
        ]
    },
    {
        "id": "1e5e3be668990fcb",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "setDeviceId",
        "func": "var deviceMsgs = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId;\n    if(i < 9) {\n        \n        deviceId = \"Elevator0\" + (i+1); \n    } else {\n        deviceId = \"Elevator\" + (i+1); \n    }\n    deviceMsgs.push({payload: {deviceId: deviceId}});\n}\nreturn [deviceMsgs];\n",
        "outputs": 1,
        "noerr": 0,
        "x": 167.41662216186523,
        "y": 383.8331699371338,
        "wires": [
            [
                "b2bec8a524b89e2a"
            ]
        ]
    },
    {
        "id": "6b086c71c7a2708c",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "setDeviceId",
        "func": "var deviceMsgs = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId;\n    if(i < 9) {\n        \n        deviceId = \"Elevator0\" + (i+1); \n    } else {\n        deviceId = \"Elevator\" + (i+1); \n    }\n    deviceMsgs.push({payload: {deviceId: deviceId}});\n}\nreturn [deviceMsgs];\n",
        "outputs": 1,
        "noerr": 0,
        "x": 369.9166145324707,
        "y": 1803.8332538604736,
        "wires": [
            [
                "d3abca9cd0dfbbc5"
            ]
        ]
    },
    {
        "id": "5a4c797d35483a0c",
        "type": "inject",
        "z": "9340536010ad11d6",
        "name": "stop 10 elevators",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "{\"instances\" : 10 }",
        "payloadType": "json",
        "x": 154.77376556396484,
        "y": 1799.2498779296875,
        "wires": [
            [
                "6b086c71c7a2708c"
            ]
        ]
    },
    {
        "id": "5be93918bef9b4b0",
        "type": "set properties",
        "z": "9340536010ad11d6",
        "deviceId": "",
        "schema": "b6e56c3f.e8dd1",
        "name": "get active device properties",
        "propAll": true,
        "prop": "9f9135f2be17",
        "valueType": "msg",
        "value": "payload",
        "x": 1033.4044380187988,
        "y": 2081.3332138061523,
        "wires": [
            [
                "6f8e98051e666bd1"
            ]
        ]
    },
    {
        "id": "925261e1e2f21427",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "Change active Device",
        "func": "flow.set(\"deviceId\",msg.payload);\nreturn {payload:{deviceId:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 760.4760322570801,
        "y": 2080.4879989624023,
        "wires": [
            [
                "5be93918bef9b4b0"
            ]
        ]
    },
    {
        "id": "46d3e36706deb996",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "add device instance",
        "func": "var devices = flow.get(\"activeDevices\") || [];\nvar selectedId = flow.get(\"deviceId\") || null;\nvar deviceId = msg.payload.deviceId;\nnode.log(msg.payload.deviceId);\nif (devices.indexOf(deviceId) < 0)\n{\n    devices.push(msg.payload.deviceId);\n    flow.set(\"activeDevices\", devices);\n    if (selectedId === null)\n    {\n        selectedId = devices[0];\n        flow.set(\"deviceId\", selectedId);\n    }\n}\n\n\nvar msg = {payload: selectedId, options: devices};\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 298.1666145324707,
        "y": 2059.2023544311523,
        "wires": [
            [
                "6ae90ad038241732"
            ]
        ]
    },
    {
        "id": "c030dc4d141d53e4",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "remove device instance",
        "func": "var devices = flow.get(\"activeDevices\") || [];\nvar selectedId = flow.get(\"deviceId\");\n\nvar deviceId = msg.payload.deviceId;\nvar index = devices.indexOf(deviceId);\nif (index >= 0)\n{\n    devices.splice(index,1);\n    flow.set(\"activeDevices\", devices);\n\n    if (selectedId === deviceId)\n    {\n        selectedId = devices[0];\n        flow.set(\"deviceId\", selectedId);\n       \n    }\n}\n\nvar msg = {payload: selectedId, options: devices};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 288.2380561828613,
        "y": 2111.63094329834,
        "wires": [
            [
                "6ae90ad038241732"
            ]
        ]
    },
    {
        "id": "b0aeecf551a4b61f",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "start",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": true,
        "schema": "b6e56c3f.e8dd1",
        "props": [],
        "name": "device started",
        "x": 74.3094596862793,
        "y": 2024.6310653686523,
        "wires": [
            [
                "46d3e36706deb996",
                "6f8e98051e666bd1"
            ]
        ]
    },
    {
        "id": "ad29babe3a376214",
        "type": "device listener",
        "z": "9340536010ad11d6",
        "monitor": "stop",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": true,
        "schema": "",
        "props": [],
        "name": "device deleted",
        "x": 79.38090896606445,
        "y": 2077.0592880249023,
        "wires": [
            [
                "c030dc4d141d53e4"
            ]
        ]
    },
    {
        "id": "6ae90ad038241732",
        "type": "ui_dropdown",
        "z": "9340536010ad11d6",
        "name": "Select instance",
        "label": "Select Device instance",
        "group": "1ddf1d13f49ccf05",
        "order": 9,
        "width": "0",
        "height": "0",
        "options": [
            {
                "label": "",
                "value": ""
            }
        ],
        "payload": "",
        "topic": "",
        "x": 549.5237007141113,
        "y": 2083.345054626465,
        "wires": [
            [
                "925261e1e2f21427"
            ]
        ]
    },
    {
        "id": "6f8e98051e666bd1",
        "type": "link out",
        "z": "9340536010ad11d6",
        "name": "Reset Values",
        "links": [
            "9e1e26a722719c4b"
        ],
        "x": 1302.7856636047363,
        "y": 2030.2974472045898,
        "wires": []
    },
    {
        "id": "1e47189d0210141a",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "Set properties in UI",
        "info": "",
        "x": 1414.047534942627,
        "y": 2026.6665878295898,
        "wires": []
    },
    {
        "id": "916d979e9e56f125",
        "type": "comment",
        "z": "9340536010ad11d6",
        "name": "**************************************** Device Behavior ****************************************",
        "info": "",
        "x": 442.38090896606445,
        "y": 2.9998397827148438,
        "wires": []
    },
    {
        "id": "a706f38b82c30bb4",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "Register Elevators",
        "func": "var payload = msg.payload;\nvar orgid = flow.get(\"orgid\");\n\nmsg = {\n    url:\"https://\" + orgid + \".internetofthings.ibmcloud.com/api/v0002/device/types/Elevator/devices\",\n    payload: payload,\n    headers:{\n        \"Accept\":\"application/json\",\n        \"Content-type\":\"application/json\"\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 642.4976081848145,
        "y": 135.11650848388672,
        "wires": [
            [
                "00c493f6be46aa38"
            ]
        ]
    },
    {
        "id": "00c493f6be46aa38",
        "type": "http request",
        "z": "9340536010ad11d6",
        "name": "Send to Watson IoT Platform",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 796.4976387023926,
        "y": 215.31652069091797,
        "wires": [
            [
                "b0e58f32114c720b"
            ]
        ]
    },
    {
        "id": "aca8739b9e16c06b",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "Form register Payload",
        "func": "var result = [];\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId;\n    if(i < 9) {\n        \n        deviceId = \"Elevator0\" + (i+1); \n    } else {\n        deviceId = \"Elevator\" + (i+1); \n    }\n    result.push({payload:{deviceId:deviceId}});\n}\nreturn [result];",
        "outputs": 1,
        "noerr": 0,
        "x": 394.4476509094238,
        "y": 135.19988250732422,
        "wires": [
            [
                "a706f38b82c30bb4"
            ]
        ]
    },
    {
        "id": "c1783adf73e07634",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "Set organization ID",
        "func": "flow.set(\"orgid\", \"fo3mnd\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 402.4476509094238,
        "y": 77.19986724853516,
        "wires": [
            [
                "88ef6994cd703499"
            ]
        ]
    },
    {
        "id": "88ef6994cd703499",
        "type": "function",
        "z": "9340536010ad11d6",
        "name": "Register Elevator Type",
        "func": "var orgid = flow.get(\"orgid\");\n\nmsg = {\n    url:\"https://\" + orgid + \".internetofthings.ibmcloud.com/api/v0002/device/types\",\n    payload: {\"id\":\"Elevator\"},\n    headers:{\n        \"Accept\":\"application/json\",\n        \"Content-type\":\"application/json\"\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 666.1143074035645,
        "y": 78.03319549560547,
        "wires": [
            [
                "00c493f6be46aa38"
            ]
        ]
    },
    {
        "id": "b0e58f32114c720b",
        "type": "debug",
        "z": "9340536010ad11d6",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 794.4475898742676,
        "y": 287.64986419677734,
        "wires": []
    },
    {
        "id": "36b5e165303eb137",
        "type": "inject",
        "z": "9340536010ad11d6",
        "name": "start 10 elevators",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "{\"instances\" : 10 }",
        "payloadType": "json",
        "x": 116.49757766723633,
        "y": 70.99983978271484,
        "wires": [
            [
                "c1783adf73e07634",
                "1e5e3be668990fcb",
                "0a96a146542ccd84"
            ]
        ]
    },
    {
        "id": "0a96a146542ccd84",
        "type": "delay",
        "z": "9340536010ad11d6",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 352.8308906555176,
        "y": 193.7831802368164,
        "wires": [
            [
                "aca8739b9e16c06b"
            ]
        ]
    },
    {
        "id": "3e6276e903edc83e",
        "type": "inject",
        "z": "52010b312b44a905",
        "name": "start",
        "props": [
            {
                "p": "payload",
                "v": "{\"instances\":3}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"instances\":3}",
        "payloadType": "json",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "11efc77a4f3091b9"
            ]
        ]
    },
    {
        "id": "2cce7625417dd4bc",
        "type": "start virtual device",
        "z": "52010b312b44a905",
        "name": "",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "outputs": 1,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "f76debff41b1dfd8",
                "cb21b7de71d0404f"
            ]
        ]
    },
    {
        "id": "076506b83ff84dd2",
        "type": "stop virtual device",
        "z": "52010b312b44a905",
        "name": "",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "x": 830,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "4b41a7d1f20be086",
        "type": "inject",
        "z": "52010b312b44a905",
        "name": "stop",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"instances\":3}",
        "payloadType": "json",
        "x": 190,
        "y": 840,
        "wires": [
            [
                "53cc6b15fef95d07"
            ]
        ]
    },
    {
        "id": "11efc77a4f3091b9",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "setDeviceId",
        "func": "var deviceMsgs = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId;\n    if(i < 9) {\n        \n        deviceId = \"Device0\" + (i+1); \n    } else {\n        deviceId = \"Device\" + (i+1); \n    }\n    deviceMsgs.push({payload: {deviceId: deviceId}});\n}\n\n\n\n\nreturn [deviceMsgs];\n",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 360,
        "wires": [
            [
                "2cce7625417dd4bc",
                "ec6d46ef616abaee"
            ]
        ]
    },
    {
        "id": "53cc6b15fef95d07",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "setDeviceId",
        "func": "var deviceMsgs3 = []\nfor(var i = 0; i < msg.payload.instances; i++){\n    var deviceId2;\n    if(i < 9) {\n        \n        deviceId2 = \"Device0\" + (i+1); \n    } else {\n        deviceId2 = \"Device\" + (i+1); \n    }\n    deviceMsgs3.push({payload: {deviceId: deviceId2}});\n}\nreturn [deviceMsgs3];\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 820,
        "wires": [
            [
                "2f6481991ee35847"
            ]
        ]
    },
    {
        "id": "b4e0665e6747345a",
        "type": "comment",
        "z": "52010b312b44a905",
        "name": "*************************************** Device UI ***************************************",
        "info": "",
        "x": 400,
        "y": 1160,
        "wires": []
    },
    {
        "id": "09ba05b11530fc29",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "58f39586.bcf6cc",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "State",
        "format": "{{msg.payload.properties.state}}",
        "layout": "row-spread",
        "x": 1030,
        "y": 1620,
        "wires": []
    },
    {
        "id": "91da64de1262404c",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "58f39586.bcf6cc",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Coordinate",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1050,
        "y": 1480,
        "wires": []
    },
    {
        "id": "8fee3426d241eefd",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "stop",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": true,
        "schema": "a35b8df1.a8359",
        "props": [],
        "name": "device deleted",
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "72d8a6ee78adb683"
            ]
        ]
    },
    {
        "id": "72d8a6ee78adb683",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "remove device instance",
        "func": "var devices = flow.get(\"activeDevices\") || [];\nvar selectedId = flow.get(\"deviceId\");\n\nvar deviceId = msg.payload.deviceId;\nvar index = devices.indexOf(deviceId);\nif (index >= 0)\n{\n    devices.splice(index,1);\n    flow.set(\"activeDevices\", devices);\n\n    if (selectedId === deviceId)\n    {\n        selectedId = devices[0];\n        flow.set(\"deviceId\", selectedId);\n       \n    }\n}\n\nvar msg = {payload: selectedId, options: devices};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "f8259afa0ccbd68d"
            ]
        ]
    },
    {
        "id": "0e3002152a02920b",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "add device instance",
        "func": "var devices = flow.get(\"activeDevices\") || [];\nvar selectedId = flow.get(\"deviceId\") || null;\nvar deviceId = msg.payload.deviceId;\nnode.log(msg.payload.deviceId);\nif (devices.indexOf(deviceId) < 0)\n{\n    devices.push(msg.payload.deviceId);\n    flow.set(\"activeDevices\", devices);\n    if (selectedId === null)\n    {\n        selectedId = devices[0];\n        flow.set(\"deviceId\", selectedId);\n    }\n}\n\n\nvar msg = {payload: selectedId, options: devices};\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 1060,
        "wires": [
            [
                "f8259afa0ccbd68d"
            ]
        ]
    },
    {
        "id": "7c5f699728722885",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "Change active Device",
        "func": "flow.set(\"deviceId\",msg.payload);\nreturn {payload:{deviceId:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 1080,
        "wires": [
            [
                "2db55cb1131d10b6"
            ]
        ]
    },
    {
        "id": "5b864ffc6bf6e873",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "start",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": true,
        "schema": "a35b8df1.a8359",
        "props": [],
        "name": "device started",
        "x": 190,
        "y": 1020,
        "wires": [
            [
                "0e3002152a02920b",
                "ea0ca7a045ad4edf"
            ]
        ]
    },
    {
        "id": "2db55cb1131d10b6",
        "type": "set properties",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "get active device properties",
        "propAll": true,
        "prop": "9f9135f2be17",
        "valueType": "msg",
        "value": "payload",
        "x": 1100,
        "y": 1080,
        "wires": [
            [
                "ea0ca7a045ad4edf"
            ]
        ]
    },
    {
        "id": "ea0ca7a045ad4edf",
        "type": "link out",
        "z": "52010b312b44a905",
        "name": "Reset Values out",
        "links": [
            "afad172213922b19"
        ],
        "x": 1355,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f8259afa0ccbd68d",
        "type": "ui_dropdown",
        "z": "52010b312b44a905",
        "name": "Select instance",
        "label": "Select Device instance",
        "tooltip": "",
        "place": "",
        "group": "f1b3ab68.a48ae8",
        "order": 1,
        "width": 6,
        "height": 2,
        "passthru": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 640,
        "y": 1080,
        "wires": [
            [
                "7c5f699728722885"
            ]
        ]
    },
    {
        "id": "d3b3016614fdc17b",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "deviceId",
        "func": "msg.payload = msg.payload.deviceId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 1700,
        "wires": [
            [
                "351b67c67d2b5ccb"
            ]
        ]
    },
    {
        "id": "351b67c67d2b5ccb",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "58f39586.bcf6cc",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "DeviceId",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 640,
        "y": 1820,
        "wires": []
    },
    {
        "id": "6be9aa5506277ac7",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "a35b8df1.a8359",
        "props": [
            "9ae805693cb9"
        ],
        "name": "On Speed change",
        "x": 210,
        "y": 1400,
        "wires": [
            [
                "0e2c50a993bf0ff2"
            ]
        ]
    },
    {
        "id": "0e2c50a993bf0ff2",
        "type": "switch",
        "z": "52010b312b44a905",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 1400,
        "wires": [
            [
                "0ca5b3e34842a52b",
                "d3b3016614fdc17b"
            ]
        ]
    },
    {
        "id": "0ca5b3e34842a52b",
        "type": "change",
        "z": "52010b312b44a905",
        "name": "format",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.speed",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1400,
        "wires": [
            [
                "aaa849196861fb33",
                "7a40529494a206eb"
            ]
        ]
    },
    {
        "id": "bbbbac4fa0c6288f",
        "type": "switch",
        "z": "52010b312b44a905",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 1440,
        "wires": [
            [
                "5222101b45332ad2",
                "d3b3016614fdc17b"
            ]
        ]
    },
    {
        "id": "5222101b45332ad2",
        "type": "change",
        "z": "52010b312b44a905",
        "name": "format",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1440,
        "wires": [
            [
                "be461cbb79eabc73",
                "5eda1e2c12b9559f"
            ]
        ]
    },
    {
        "id": "ed7270c8a94b66dd",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "a35b8df1.a8359",
        "props": [
            "3c66eb120cef"
        ],
        "name": "On Temperature change",
        "x": 230,
        "y": 1440,
        "wires": [
            [
                "bbbbac4fa0c6288f"
            ]
        ]
    },
    {
        "id": "ce49f29ad9e4bef9",
        "type": "switch",
        "z": "52010b312b44a905",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 1480,
        "wires": [
            [
                "859116ae226e5f46",
                "d3b3016614fdc17b"
            ]
        ]
    },
    {
        "id": "acd316498bb0a09b",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "a35b8df1.a8359",
        "props": [
            "07f6eadbd104",
            "1d75a2505b5d"
        ],
        "name": "On Coordinates change",
        "x": 220,
        "y": 1480,
        "wires": [
            [
                "ce49f29ad9e4bef9",
                "6dc5f6a862e1223e"
            ]
        ]
    },
    {
        "id": "a761b10367439881",
        "type": "switch",
        "z": "52010b312b44a905",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 1620,
        "wires": [
            [
                "d3b3016614fdc17b",
                "09ba05b11530fc29"
            ]
        ]
    },
    {
        "id": "0d470618220d5983",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "a35b8df1.a8359",
        "props": [
            "cf34a9983af3"
        ],
        "name": "On State change",
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "a761b10367439881"
            ]
        ]
    },
    {
        "id": "859116ae226e5f46",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "join",
        "func": "msg.payload = msg.payload.properties.latitude +\", \" + msg.payload.properties.longitude\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 1480,
        "wires": [
            [
                "91da64de1262404c"
            ]
        ]
    },
    {
        "id": "efd4c359fc40cc8e",
        "type": "switch",
        "z": "52010b312b44a905",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 1240,
        "wires": [
            [
                "d3b3016614fdc17b",
                "0ca5b3e34842a52b",
                "5222101b45332ad2",
                "859116ae226e5f46",
                "09ba05b11530fc29",
                "69888bbc47593f05",
                "6bfed104eed296f1",
                "6554c467219d7fe7"
            ]
        ]
    },
    {
        "id": "afad172213922b19",
        "type": "link in",
        "z": "52010b312b44a905",
        "name": "Reset Values in",
        "links": [
            "ea0ca7a045ad4edf"
        ],
        "x": 135,
        "y": 1240,
        "wires": [
            [
                "efd4c359fc40cc8e"
            ]
        ]
    },
    {
        "id": "2f6481991ee35847",
        "type": "set properties",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "set state off",
        "propAll": false,
        "prop": "cf34a9983af3",
        "valueType": "str",
        "value": "off",
        "x": 570,
        "y": 820,
        "wires": [
            [
                "076506b83ff84dd2"
            ]
        ]
    },
    {
        "id": "a7e6c53eccca387b",
        "type": "set properties",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "Set Speed",
        "propAll": false,
        "prop": "9ae805693cb9",
        "valueType": "msg",
        "value": "payload",
        "x": 1390,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "3fcc4756ebba483d",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1720,
        "wires": [
            [
                "a7e6c53eccca387b"
            ]
        ]
    },
    {
        "id": "aaa849196861fb33",
        "type": "ui_slider",
        "z": "52010b312b44a905",
        "name": "Set Speed",
        "label": "Set Speed",
        "tooltip": "",
        "group": "75358a9.1d2c074",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "200",
        "step": "",
        "x": 1050,
        "y": 1720,
        "wires": [
            [
                "3fcc4756ebba483d"
            ]
        ]
    },
    {
        "id": "9da4c3dada08aa68",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1760,
        "wires": [
            [
                "c05c07193ed5e6ea"
            ]
        ]
    },
    {
        "id": "be461cbb79eabc73",
        "type": "ui_slider",
        "z": "52010b312b44a905",
        "name": "Set Temperature ",
        "label": "Set Temperature ",
        "tooltip": "",
        "group": "75358a9.1d2c074",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "200",
        "step": "",
        "x": 1060,
        "y": 1760,
        "wires": [
            [
                "9da4c3dada08aa68"
            ]
        ]
    },
    {
        "id": "c05c07193ed5e6ea",
        "type": "set properties",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "Set Temperature",
        "propAll": false,
        "prop": "3c66eb120cef",
        "valueType": "msg",
        "value": "payload",
        "x": 1380,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "687b2c2ddaf658ae",
        "type": "device function",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "idle",
        "func": "state=\"idle\"\nspeed = 0;\ntemperature = 40 + Math.floor(Math.random() * 21) - 10;\ntimestamp = Date.now()\nmsg.delay = global.get(\"idleTime\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "4526900ade767820",
                "0abee5482d200905"
            ]
        ]
    },
    {
        "id": "f76debff41b1dfd8",
        "type": "switch",
        "z": "52010b312b44a905",
        "name": "Switch State",
        "property": "payload.properties.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "moving",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "loading",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unloading",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "maintenance",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "687b2c2ddaf658ae"
            ],
            [
                "9be468fabdf64747"
            ],
            [
                "d9f1fdae410c4628"
            ],
            [
                "5657f7b42af59a04"
            ],
            [
                "d65b95e5e4cdd86b"
            ]
        ]
    },
    {
        "id": "77ef0d10c78fa08c",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "a35b8df1.a8359",
        "props": [
            "508bc5807ba6"
        ],
        "name": "On Load change",
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "ddbad777eb4e4e69"
            ]
        ]
    },
    {
        "id": "ddbad777eb4e4e69",
        "type": "switch",
        "z": "52010b312b44a905",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 1320,
        "wires": [
            [
                "d3b3016614fdc17b",
                "6bfed104eed296f1",
                "6554c467219d7fe7"
            ]
        ]
    },
    {
        "id": "62ba68de60375b25",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "a35b8df1.a8359",
        "props": [
            "7aff46892f74"
        ],
        "name": "On Command change",
        "x": 220,
        "y": 1360,
        "wires": [
            [
                "3b1547a0e4734f8e"
            ]
        ]
    },
    {
        "id": "3b1547a0e4734f8e",
        "type": "switch",
        "z": "52010b312b44a905",
        "name": "",
        "property": "payload.deviceId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "deviceId",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 1360,
        "wires": [
            [
                "69888bbc47593f05"
            ]
        ]
    },
    {
        "id": "69888bbc47593f05",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "58f39586.bcf6cc",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Command",
        "format": "{{msg.payload.properties.command}}",
        "layout": "row-spread",
        "x": 1070,
        "y": 1360,
        "wires": []
    },
    {
        "id": "0abee5482d200905",
        "type": "delay",
        "z": "52010b312b44a905",
        "name": "",
        "pauseType": "random",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "10",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "05864e10d31d0512"
            ]
        ]
    },
    {
        "id": "0eeee2d9ecb13722",
        "type": "delay",
        "z": "52010b312b44a905",
        "name": "",
        "pauseType": "delayv",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "05864e10d31d0512"
            ]
        ]
    },
    {
        "id": "07eb8868e660f501",
        "type": "delay",
        "z": "52010b312b44a905",
        "name": "",
        "pauseType": "delayv",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 480,
        "wires": [
            [
                "05864e10d31d0512"
            ]
        ]
    },
    {
        "id": "541686fe0c0f7e7b",
        "type": "delay",
        "z": "52010b312b44a905",
        "name": "",
        "pauseType": "delayv",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 440,
        "wires": [
            [
                "05864e10d31d0512"
            ]
        ]
    },
    {
        "id": "cb21b7de71d0404f",
        "type": "device function",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "",
        "func": "var lat = [53.135278, 53.843611, 53.773056, 54.3475, 54.519167, 54.465833, 54.190278, 53.438056, 52.408333, 51.11, 50.264167, 50.061389, 50.033611, 51.25, 52.232222];\nvar lon = [23.145556, 22.9775, 20.476111, 18.645278, 18.539444, 17.029167, 16.181667, 14.542222, 16.934167, 17.022222, 19.023611, 19.938333, 22.004722, 22.566667, 21.008333];\nif (state === \"moving\") {\nvar ran = Math.floor(Math.random() * 14)\nvar idx = context.get(msg.payload.deviceId+'count') || ran;\nif( idx > 14)\n{\n    idx = 0;  \n}\nlatitude = lat[idx];\nlongitude = lon[idx];\ntimestamp = Date.now()\ncontext.set(msg.payload.deviceId+'count',idx+1);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "87035e842710352d"
            ]
        ]
    },
    {
        "id": "4526900ade767820",
        "type": "set properties",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "Set state ",
        "propAll": true,
        "prop": "cf34a9983af3",
        "valueType": "msg",
        "value": "payload.properties.state",
        "x": 1040,
        "y": 600,
        "wires": [
            [
                "c6afdba3d4a30f2c"
            ]
        ]
    },
    {
        "id": "afb2158aa8f182c9",
        "type": "delay",
        "z": "52010b312b44a905",
        "name": "",
        "pauseType": "delayv",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "5",
        "randomLast": "10",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 360,
        "wires": [
            [
                "05864e10d31d0512"
            ]
        ]
    },
    {
        "id": "b185b3e7203043a0",
        "type": "delay",
        "z": "52010b312b44a905",
        "name": "",
        "pauseType": "delayv",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "cb21b7de71d0404f"
            ]
        ]
    },
    {
        "id": "e9d295acec7bbd68",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "command",
        "func": "var newdata = {}\nnewdata.command = \"addRow\",\nnewdata.arguments = [msg.payload, true]\nnewdata.returnPromise = true\nmsg.payload = newdata\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "7a724761ce78356d",
        "type": "link in",
        "z": "52010b312b44a905",
        "name": "start in",
        "links": [
            "d58cd61.24046a8"
        ],
        "x": 135,
        "y": 440,
        "wires": [
            [
                "11efc77a4f3091b9"
            ]
        ]
    },
    {
        "id": "e59512e904a596b1",
        "type": "link in",
        "z": "52010b312b44a905",
        "name": "stop in",
        "links": [
            "51e38ec0.01fe08"
        ],
        "x": 135,
        "y": 780,
        "wires": [
            [
                "53cc6b15fef95d07"
            ]
        ]
    },
    {
        "id": "20560e1021fc4fef",
        "type": "link in",
        "z": "52010b312b44a905",
        "name": "update in",
        "links": [
            "eb87a091.aedc1"
        ],
        "x": 135,
        "y": 900,
        "wires": [
            [
                "087cedd989faa46a",
                "7cad2ee8b76f6cb4"
            ]
        ]
    },
    {
        "id": "087cedd989faa46a",
        "type": "set properties",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "",
        "propAll": false,
        "prop": "7aff46892f74",
        "valueType": "msg",
        "value": "payload",
        "x": 420,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "7cad2ee8b76f6cb4",
        "type": "device function",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "",
        "func": "\neval(msg.payload.key +\" = '\"+msg.payload.value+\"';\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "a6c88b460bcf067e",
        "type": "mqtt out",
        "z": "52010b312b44a905",
        "name": "",
        "topic": "Cab",
        "qos": "",
        "retain": "",
        "broker": "fbbe7b45.74e6b",
        "x": 1410,
        "y": 660,
        "wires": []
    },
    {
        "id": "15a4ebec590f6fb1",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "Last 20 rows",
        "func": "var newdata = context.get(\"arr\");\n\nif ((newdata === undefined)) {\n    newdata = [];\n} else {\n    \nnewdata = JSON.parse(newdata);\n}\n\nnewdata.push(msg.payload);\n\nif (newdata.length > 20){\n    newdata.shift()\n} \n\ncontext.set(\"arr\", JSON.stringify(newdata));\nmsg.payload = newdata.reverse()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "c6afdba3d4a30f2c",
        "type": "change",
        "z": "52010b312b44a905",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.deviceType",
                "pt": "msg",
                "to": "payload.properties.deviceType",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.deviceId",
                "pt": "msg",
                "to": "payload.properties.deviceId",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.properties",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.changedProperty",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.command",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 660,
        "wires": [
            [
                "e9d295acec7bbd68",
                "15a4ebec590f6fb1",
                "a6c88b460bcf067e"
            ]
        ]
    },
    {
        "id": "6dc5f6a862e1223e",
        "type": "change",
        "z": "52010b312b44a905",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.latitude",
                "pt": "msg",
                "to": "payload.lat",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.properties.longitude",
                "pt": "msg",
                "to": "payload.lon",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.properties",
                "pt": "msg"
            },
            {
                "t": "move",
                "p": "payload.deviceId",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.label",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.deviceType",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.changedProperty",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "08baaf87bf458caa",
        "type": "ui_template",
        "z": "52010b312b44a905",
        "group": "58f39586.bcf6cc",
        "name": "Map link",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<div align=\"center\">\n<p><a target=\"_blank\" href={{host}}/worldmap>Map</a> </p>         \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1200,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "9139256ff021ff83",
        "type": "device listener",
        "z": "52010b312b44a905",
        "monitor": "property",
        "monitorAll": false,
        "deviceId": "",
        "allDeviceIds": true,
        "allSchemas": false,
        "allProps": false,
        "schema": "a35b8df1.a8359",
        "props": [
            "1d75a2505b5d"
        ],
        "name": "On Coordinate change",
        "x": 1000,
        "y": 680,
        "wires": [
            [
                "c6afdba3d4a30f2c"
            ]
        ]
    },
    {
        "id": "c24082273ff6cc97",
        "type": "set properties",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "Set Load",
        "propAll": false,
        "prop": "508bc5807ba6",
        "valueType": "msg",
        "value": "payload",
        "x": 1380,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "b6c2948f63491c7a",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "set ID",
        "func": "msg.deviceId = flow.get(\"deviceId\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1800,
        "wires": [
            [
                "c24082273ff6cc97"
            ]
        ]
    },
    {
        "id": "c360f72a6e2a4901",
        "type": "ui_slider",
        "z": "52010b312b44a905",
        "name": "Set Load",
        "label": "Set Load",
        "tooltip": "",
        "group": "75358a9.1d2c074",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "min": "0",
        "max": "50",
        "step": "",
        "x": 1040,
        "y": 1800,
        "wires": [
            [
                "b6c2948f63491c7a"
            ]
        ]
    },
    {
        "id": "6bfed104eed296f1",
        "type": "change",
        "z": "52010b312b44a905",
        "name": "format",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.load",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1800,
        "wires": [
            [
                "c360f72a6e2a4901"
            ]
        ]
    },
    {
        "id": "87035e842710352d",
        "type": "change",
        "z": "52010b312b44a905",
        "name": "coordinatesTime",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "get(\"coordinatesTime\")",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 60,
        "wires": [
            [
                "b185b3e7203043a0"
            ]
        ]
    },
    {
        "id": "ee646d8daedbb16f",
        "type": "link in",
        "z": "52010b312b44a905",
        "name": "env in",
        "links": [
            "9871f893.ba08a"
        ],
        "x": 135,
        "y": 500,
        "wires": [
            [
                "ec6d46ef616abaee"
            ]
        ]
    },
    {
        "id": "9be468fabdf64747",
        "type": "device function",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "moving",
        "func": "state=\"moving\"\nvar speedMoving = Math.floor(Number(60) - Number(load))\nspeed = speedMoving  < 0 ? 10 : speedMoving\ntemperature = Number(temperature) + Number(load);\ntimestamp = Date.now()\nmsg.delay = global.get(\"movingTime\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 360,
        "wires": [
            [
                "4526900ade767820",
                "afb2158aa8f182c9"
            ]
        ]
    },
    {
        "id": "d9f1fdae410c4628",
        "type": "device function",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "loading",
        "func": "state=\"loading\"\nspeed = 0\nvar vload = Math.floor(Math.random() * (50 - 5)) + 5\nmsg.payload.properties.load = vload\nload = vload\n//temperature = Math.floor(temperature + temperature* vload/100)\n//temperature = Math.floor(temperature + vload)\ntimestamp = Date.now()\nmsg.delay = global.get(\"loadingTime\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 400,
        "wires": [
            [
                "4526900ade767820",
                "0eeee2d9ecb13722"
            ]
        ]
    },
    {
        "id": "5657f7b42af59a04",
        "type": "device function",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "unloading",
        "func": "state=\"unloading\"\nspeed = 0\n//temperature = Math.floor(temperature - temperature* load/100)\n\nvar tempUnloading = Math.floor(Number(temperature) - Number(load))\ntemperature  = tempUnloading  < 0 ? 40 : tempUnloading\n\nmsg.payload.properties.load = 0\nload = 0\ntimestamp = Date.now()\nmsg.delay = global.get(\"unloadingTime\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 440,
        "wires": [
            [
                "4526900ade767820",
                "541686fe0c0f7e7b"
            ]
        ]
    },
    {
        "id": "d65b95e5e4cdd86b",
        "type": "device function",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "maintenance",
        "func": "state=\"maintenance\"\nspeed = 0;\ntemperature = 20 + Math.floor(Math.random() * 8) - 4;\nmsg.payload.properties.load = 0\nload = 0\ntimestamp = Date.now()\nmsg.delay = global.get(\"maintenanceTime\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "4526900ade767820",
                "07eb8868e660f501"
            ]
        ]
    },
    {
        "id": "ec6d46ef616abaee",
        "type": "function",
        "z": "52010b312b44a905",
        "name": "Set Times",
        "func": "if ((msg.payload.idleTime !== undefined)) {\n    msg.idleTime = msg.payload.idleTime; \n} else {\n    msg.idleTime = 4000;\n}\n\nif ((msg.payload.movingTime !== undefined)) {\n    msg.movingTime =  msg.payload.movingTime;\n} else {\n    msg.movingTime = 20000;\n}\nif ((msg.payload.loadingTime !== undefined)) {\n    msg.loadingTime =  msg.payload.loadingTime\n} else {\n    msg.loadingTime = 10000;\n}\nif ((msg.payload.unloadingTime !== undefined)) {\n    msg.unloadingTime =  msg.payload.unloadingTime;\n} else {\n    msg.unloadingTime = 10000;\n}\nif ((msg.payload.maintenanceTime !== undefined)) {\n    msg.maintenanceTime = msg.payload.maintenanceTime;\n} else {\n    msg.maintenanceTime = 20000;\n}\nif ((msg.payload.coordinatesTime !== undefined)) {\n    msg.coordinatesTime = msg.payload.coordinatesTime;\n} else {\n    msg.coordinatesTime = 4000;\n}\n\n\n\n\n\n\nif ((msg.payload.idleTime === null)) {\n    msg.idleTime = 4000;\n} \n\nif ((msg.payload.movingTime === null)) {\n    msg.movingTime =  20000;\n} \nif ((msg.payload.loadingTime === null)) {\n    msg.loadingTime =  10000;\n} \nif ((msg.payload.unloadingTime === null)) {\n    msg.unloadingTime =  10000;\n} \nif ((msg.payload.maintenanceTime === null)) {\n    msg.maintenanceTime = 20000;\n} \nif ((msg.payload.coordinatesTime === null)) {\n    msg.coordinatesTime = 4000;\n} \n\n\n\n\nglobal.set(\"idleTime\", msg.idleTime)\nglobal.set(\"movingTime\", msg.movingTime)\nglobal.set(\"loadingTime\", msg.loadingTime)\nglobal.set(\"unloadingTime\", msg.unloadingTime)\nglobal.set(\"maintenanceTime\", msg.maintenanceTime)\nglobal.set(\"coordinatesTime\", msg.coordinatesTime)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 520,
        "wires": [
            [
                "e5c483e2330feca9",
                "fb75fcf34b10eb0e",
                "c30a26c9cc1a13ec",
                "c16a2d3e3e46c7cc",
                "1d440fcb1a9f5f83",
                "3a15dd74d82d3442"
            ]
        ]
    },
    {
        "id": "05864e10d31d0512",
        "type": "device function",
        "z": "52010b312b44a905",
        "deviceId": "",
        "schema": "a35b8df1.a8359",
        "name": "",
        "func": "var nextState = null\nswitch(state){\ncase \"idle\":\nnextState = \"moving\";\nbreak;\n\ncase \"moving\":\n//var outOfNormalRange = Math.random() * 100 < 5;\n//if(outOfNormalRange){\nif((Number(temperature) + Number(load))>120)\n{\nnextState  = \"maintenance\";\nbreak;\n}\n\nif(msg.payload.properties.load === 0){\nnextState = \"loading\";\n} else {\nnextState = \"unloading\";\n}\nbreak;\n\ncase \"loading\":\nnextState = \"moving\";\nbreak;\n\ncase \"unloading\":\nnextState = \"moving\";\nbreak;\n\ncase \"maintenance\":\nnextState = \"idle\";\nbreak;\n\ndefault:\n    var err = \"unknow state: \" + state;\n    node.error(err);\n\tnode.status({fill:\"red\",shape:\"ring\",text: err});\n\treturn null;\n}\n\nmsg.payload.properties.state = nextState\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 160,
        "wires": [
            [
                "f76debff41b1dfd8"
            ]
        ]
    },
    {
        "id": "e5c483e2330feca9",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "1a92dc03.b0d86c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "idleTime",
        "label": "idleTime",
        "format": "{{msg.idleTime}}",
        "layout": "row-spread",
        "x": 520,
        "y": 420,
        "wires": []
    },
    {
        "id": "fb75fcf34b10eb0e",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "1a92dc03.b0d86c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "movingTime",
        "label": "movingTime",
        "format": "{{msg.movingTime}}",
        "layout": "row-spread",
        "x": 530,
        "y": 460,
        "wires": []
    },
    {
        "id": "c30a26c9cc1a13ec",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "1a92dc03.b0d86c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "loadingTime",
        "label": "loadingTime",
        "format": "{{msg.loadingTime}}",
        "layout": "row-spread",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "c16a2d3e3e46c7cc",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "1a92dc03.b0d86c",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "unloadingTime",
        "label": "unloadingTime",
        "format": "{{msg.unloadingTime}}",
        "layout": "row-spread",
        "x": 540,
        "y": 540,
        "wires": []
    },
    {
        "id": "1d440fcb1a9f5f83",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "1a92dc03.b0d86c",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "maintenanceTime",
        "label": "maintenanceTime",
        "format": "{{msg.maintenanceTime}}",
        "layout": "row-spread",
        "x": 550,
        "y": 580,
        "wires": []
    },
    {
        "id": "3a15dd74d82d3442",
        "type": "ui_text",
        "z": "52010b312b44a905",
        "group": "1a92dc03.b0d86c",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "coordinatesTime",
        "label": "coordinatesTime",
        "format": "{{msg.coordinatesTime}}",
        "layout": "row-spread",
        "x": 550,
        "y": 620,
        "wires": []
    },
    {
        "id": "6554c467219d7fe7",
        "type": "change",
        "z": "52010b312b44a905",
        "name": "format",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.load",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1300,
        "wires": [
            [
                "9f4d1e84708d09f9"
            ]
        ]
    },
    {
        "id": "9f4d1e84708d09f9",
        "type": "ui_gauge",
        "z": "52010b312b44a905",
        "name": "",
        "group": "58f39586.bcf6cc",
        "order": 7,
        "width": 6,
        "height": 3,
        "gtype": "gage",
        "title": "Load",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1050,
        "y": 1300,
        "wires": []
    },
    {
        "id": "7a40529494a206eb",
        "type": "ui_gauge",
        "z": "52010b312b44a905",
        "name": "",
        "group": "58f39586.bcf6cc",
        "order": 5,
        "width": 6,
        "height": 3,
        "gtype": "gage",
        "title": "Speed",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "70",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1050,
        "y": 1400,
        "wires": []
    },
    {
        "id": "5eda1e2c12b9559f",
        "type": "ui_gauge",
        "z": "52010b312b44a905",
        "name": "",
        "group": "58f39586.bcf6cc",
        "order": 6,
        "width": 6,
        "height": 3,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "150",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1050,
        "y": 1440,
        "wires": []
    },
    {
        "id": "9960f24a.879d7",
        "type": "inject",
        "z": "52d38d07.d65f4c",
        "name": "Generate",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "c1bbd630.9836d8",
                "d18a6170.5e21e",
                "bb79167a.55b388"
            ]
        ]
    },
    {
        "id": "d0e4ae7d.52e77",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "Generate Key (randomBytes) for AES",
        "func": "const crypto =  global.get('crypto');\nvar passphrase = crypto.randomBytes(16);\npassphrase = passphrase.toString('hex')\nglobal.set('passphrase', passphrase);\nmsg.passphrase = passphrase\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 220,
        "wires": [
            [
                "da78a22f.df63",
                "60415986.a4041"
            ]
        ]
    },
    {
        "id": "d0dd023f.00c03",
        "type": "change",
        "z": "52d38d07.d65f4c",
        "name": "Report to Base64",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$base64encode(payload)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 340,
        "wires": [
            [
                "d0e4ae7d.52e77",
                "206455f6.f373f2"
            ]
        ]
    },
    {
        "id": "c1bbd630.9836d8",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "UUID",
        "func": "msg.parts = {\"id\":\"13cf5e91.a28061\",\"type\":\"object\",\"index\":0,\"count\":5};\nmsg.topic = 'UUID';\nmsg.payload = uuidv4()\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 80,
        "wires": [
            [
                "8b6685d7.83a88",
                "dae48c9e.244b"
            ]
        ]
    },
    {
        "id": "d18a6170.5e21e",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "Timestamp",
        "func": "msg.parts = {\"id\":\"13cf5e91.a28061\",\"type\":\"object\",\"index\":1,\"count\":5};\nmsg.topic = 'Timestamp';\nmsg.payload = new Date().toISOString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "8b6685d7.83a88",
                "dae48c9e.244b"
            ]
        ]
    },
    {
        "id": "da78a22f.df63",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "AESEncryptDoc",
        "func": "const crypto =  global.get('crypto');\nvar mykey = crypto.createCipher('aes-128-cbc', msg.passphrase);\nvar mystr = mykey.update(msg.payload, 'utf8', 'hex')\nmystr += mykey.final('hex');\nmsg.payload = mystr.trim();\nmsg.parts = {\"id\":\"13cf5e91.a28061\",\"type\":\"object\",\"index\":2,\"count\":5};\nmsg.topic = 'AESEncryptDoc';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 200,
        "wires": [
            [
                "8b6685d7.83a88",
                "dae48c9e.244b"
            ]
        ]
    },
    {
        "id": "60415986.a4041",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "RSAEncryptAESKey",
        "func": "const crypto =  global.get('crypto');\nvar fs = global.get('fs');\nlet serverPublicKey = fs.readFileSync(\"C:\\\\DevOps\\\\Projects\\\\e-sprawozdania\\\\serverPublicKey.pem\")\nmsg.payload = msg.passphrase\nif(typeof msg.payload == \"object\")\n{\n    msg.payload = JSON.stringify(msg.payload);\n}\nlet buffer = Buffer.from(msg.payload, 'utf8')\nlet encrypted = crypto.publicEncrypt(serverPublicKey, buffer);\nmsg.payload = encrypted.toString('base64');\n\nmsg.parts = {\"id\":\"13cf5e91.a28061\",\"type\":\"object\",\"index\":3,\"count\":5};\nmsg.topic = 'RSAEncryptKey';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 260,
        "wires": [
            [
                "8b6685d7.83a88",
                "dae48c9e.244b"
            ]
        ]
    },
    {
        "id": "2dc601b8.f97fbe",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "SHA256 from Report ",
        "func": "const crypto =  global.get('crypto');\nconst hash = crypto.createHash('sha256');\n\nhash.update(msg.payload);\nmsg.payload = hash.digest('hex')\n\nmsg.parts = {\"id\":\"13cf5e91.a28061\",\"type\":\"object\",\"index\":4,\"count\":5};\nmsg.topic = 'HashSHA256';\nmsg.complete\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 360,
        "wires": [
            [
                "8b6685d7.83a88",
                "dae48c9e.244b"
            ]
        ]
    },
    {
        "id": "8b6685d7.83a88",
        "type": "join",
        "z": "52d38d07.d65f4c",
        "name": "Report",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 360,
        "wires": [
            [
                "fe90aa9e.2a354"
            ]
        ]
    },
    {
        "id": "783dbf5f.871e4",
        "type": "xml",
        "z": "52d38d07.d65f4c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "fe5acb8b.5b4db8"
            ]
        ]
    },
    {
        "id": "fe90aa9e.2a354",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "Wrap with InitRequest",
        "func": "//var fs = global.get('fs');\n//var ClientPublicKey = fs.readFileSync(\"C:\\\\DevOps\\\\Projects\\\\e-sprawozdania\\\\clientPublicKey.pem\");\n//msg.payload = { \"InitRequest\": {\"Document\": msg.payload, \"ClientPublicKey\": ClientPublicKey.toString('utf8')}}\nmsg.payload = { \"InitRequest\": {Document: msg.payload}}\nvar msg1 = {}\nmsg1.payload = msg.payload\nreturn msg1;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 260,
        "wires": [
            [
                "783dbf5f.871e4"
            ]
        ]
    },
    {
        "id": "dae48c9e.244b",
        "type": "debug",
        "z": "52d38d07.d65f4c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 140,
        "wires": []
    },
    {
        "id": "6066d74a.156b18",
        "type": "comment",
        "z": "52d38d07.d65f4c",
        "name": "node-red-contrib-crypto-js",
        "info": "",
        "x": 130,
        "y": 20,
        "wires": []
    },
    {
        "id": "206455f6.f373f2",
        "type": "delay",
        "z": "52d38d07.d65f4c",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 390,
        "y": 360,
        "wires": [
            [
                "2dc601b8.f97fbe"
            ]
        ]
    },
    {
        "id": "fe5acb8b.5b4db8",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "Sign InitRequest",
        "func": "var SignedXml = global.get('xmlcrypto').SignedXml;\nvar fs = global.get('fs')\nvar xml = msg.payload\nvar sig = new SignedXml()\nsig.addReference(\"//*[local-name(.)='Document']\")    \nsig.signingKey = fs.readFileSync(\"C:\\\\DevOps\\\\Projects\\\\e-sprawozdania\\\\clientPrivateKey.pem\")\nsig.computeSignature(xml);\nmsg.payload =  sig.getSignedXml();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 260,
        "wires": [
            [
                "7f30e89a.e026c",
                "75eb9fd8.2f49c8"
            ]
        ]
    },
    {
        "id": "7f30e89a.e026c",
        "type": "link out",
        "z": "52d38d07.d65f4c",
        "name": "out_prepare",
        "links": [
            "4840d7e6.f71288"
        ],
        "x": 1535,
        "y": 160,
        "wires": []
    },
    {
        "id": "bb79167a.55b388",
        "type": "function",
        "z": "52d38d07.d65f4c",
        "name": "Create Report.xml",
        "func": "\nvar UUID = uuidv4();\nvar timestamp = new Date().toISOString();\nvar name = getName();\nvar number = getRandomIntInclusive(1000, 9999);\n\nvar xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><Report><UUID>'+\nUUID+'</UUID><Timestamp>'+ timestamp+'</Timestamp><Name>'+name+'</Name><Number>'+number+'</Number></Report>'\n\nmsg.payload = xml\n\nfunction getName() {\nvar list = [ \"Marek\",\"Tomasz\",\"Wojciech\",\"Adam\",\"Sebastian\",\"Krzysztof\",\"Bartosz\",\"Dariusz\",\"Franciszek\",\"Grzegorz\"];\nreturn list[Math.floor(Math.random() * 10)];\n}\n    \n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "d0dd023f.00c03"
            ]
        ]
    },
    {
        "id": "75eb9fd8.2f49c8",
        "type": "debug",
        "z": "52d38d07.d65f4c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1470,
        "y": 260,
        "wires": []
    },
    {
        "id": "28f474e7.3dc86c",
        "type": "comment",
        "z": "52d38d07.d65f4c",
        "name": "settings.js",
        "info": "    functionGlobalContext: {\n        // os:require('os'),\n        // jfive:require(\"johnny-five\"),\n        // j5board:require(\"johnny-five\").Board({repl:false})\n\t libxmljs: require(\"libxmljs\"),\n\t crypto: require('crypto'),\n\t xmlcrypto: require('xml-crypto'),\n\t fs: require('fs'),\n         xmldom: require('xmldom'),\n\tlocalstorage: require('node-localstorage')   \t    \n    },",
        "x": 360,
        "y": 20,
        "wires": []
    },
    {
        "id": "f7fa9cb9.4abf08",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Error 401",
        "func": "msg.payload = \"Wrong signature\";\n\nmsg.statusCode = 401;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 80,
        "wires": [
            [
                "f3368167.d59068"
            ]
        ]
    },
    {
        "id": "2ccdd759.abd988",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Verify Signature",
        "func": "var select = global.get('xmlcrypto').xpath;\nvar SignedXml = global.get('xmlcrypto').SignedXml;\nvar FileKeyInfo = global.get('xmlcrypto').FileKeyInfo;\nvar dom = global.get('xmldom').DOMParser;\nvar fs =global.get('fs');\nvar xml = msg.payload.toString('utf8')\n//console.log(msg.payload)\t\nvar doc = new dom().parseFromString(xml)   \nvar signature = select(doc, \"/*/*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\")[0]\nvar sig = new SignedXml()\nsig.keyInfoProvider = new FileKeyInfo(\"C:\\\\DevOps\\\\Projects\\\\e-sprawozdania\\\\clientPublicKey.pem\");\nsig.loadSignature(signature)\nvar res = sig.checkSignature(xml)\nmsg.xsd_result = res \nif (!res) console.log(sig.validationErrors)\t\nmsg.payload = xml\nreturn msg;\n\n\n   \n\n   \n \n   \n",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 160,
        "wires": [
            [
                "80f8d992.5b40a"
            ]
        ]
    },
    {
        "id": "80f8d992.5b40a",
        "type": "switch",
        "z": "bd1f60e0.1331",
        "name": "",
        "property": "xsd_result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "f7fa9cb9.4abf08"
            ],
            [
                "aa0a0e27.3dd878"
            ]
        ]
    },
    {
        "id": "aa0a0e27.3dd878",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Add ReferenceNumber",
        "func": "msg.referencenumber = uuidv4()\nmsg.casetimestamp = new Date().toISOString()\n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 160,
        "wires": [
            [
                "655ed409.8520d4"
            ]
        ]
    },
    {
        "id": "f3368167.d59068",
        "type": "debug",
        "z": "bd1f60e0.1331",
        "name": "Log",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 80,
        "wires": []
    },
    {
        "id": "c56b2b41.309f8",
        "type": "xml",
        "z": "bd1f60e0.1331",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "a466b47e.c921b8"
            ]
        ]
    },
    {
        "id": "ab0062b.901e22",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "decrypt Key for AES",
        "func": "const crypto =  global.get('crypto');\nvar fs = global.get('fs');\nlet serverPrivateKey = fs.readFileSync(\"C:\\\\DevOps\\\\Projects\\\\e-sprawozdania\\\\serverPrivateKey.pem\")\nlet encrypted1  =  msg.payload.RSAEncryptKey.toString('utf8'); \nlet buffer = Buffer.from(encrypted1, 'base64')\nlet decrypted = crypto.privateDecrypt({key: serverPrivateKey}, buffer);\nmsg.decryptedKey = decrypted.toString('utf8');\nlet pl = msg.payload;\n\ntry \n{\n    pl = JSON.parse(pl);\n    msg.payload = pl;\n} \ncatch (e) \n{\n    //no json I guess\n}\n\nnode.send(msg);\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 300,
        "wires": [
            [
                "31c6b526.742e32"
            ]
        ]
    },
    {
        "id": "a466b47e.c921b8",
        "type": "change",
        "z": "bd1f60e0.1331",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.UUID",
                "pt": "msg",
                "to": "payload.InitRequest.Document.0.UUID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.Timestamp",
                "pt": "msg",
                "to": "payload.InitRequest.Document.0.Timestamp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.RSAEncryptKey",
                "pt": "msg",
                "to": "payload.InitRequest.Document.0.RSAEncryptKey",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.AESEncryptDoc",
                "pt": "msg",
                "to": "payload.InitRequest.Document.0.AESEncryptDoc",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.HashSHA256",
                "pt": "msg",
                "to": "payload.InitRequest.Document.0.HashSHA256",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.SignatureValue",
                "pt": "msg",
                "to": "payload.InitRequest.Signature.0.SignatureValue",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.InitRequest",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "filename",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "xsd_result",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 400,
        "wires": [
            [
                "ab0062b.901e22"
            ]
        ]
    },
    {
        "id": "31c6b526.742e32",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "decrypt Report AES",
        "func": "const crypto =  global.get('crypto');\nvar mykey = crypto.createDecipher('aes-128-cbc', msg.decryptedKey);\nvar DecryptDocument = mykey.update(msg.payload.AESEncryptDoc.toString(), 'hex', 'utf8')\n//console.log(msg.payload)\nDecryptDocument += mykey.final('utf8');\nmsg.documentBase64encoded = DecryptDocument\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 520,
        "wires": [
            [
                "e262e982.5fea4"
            ]
        ]
    },
    {
        "id": "cbd83cd8.cea2d8",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Verify Report with XSD",
        "func": "var x = global.get('libxmljs');\nvar fs = global.get('fs');\nvar xsd = fs.readFileSync(\"C:\\\\DevOps\\\\Projects\\\\e-sprawozdania\\\\Report.xsd\")\nvar xsdDoc = x.parseXmlString(xsd.toString());\nvar xmlDoc0 = x.parseXmlString(msg.documentDecoded);\n\nif ( xmlDoc0.validate(xsdDoc) === false ) {\n  return [ msg, null];\n} else {\n   return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 860,
        "y": 400,
        "wires": [
            [
                "78b6f126.e3b36"
            ],
            [
                "88ead76.8ea17a8"
            ]
        ]
    },
    {
        "id": "2f873269.adf5ee",
        "type": "change",
        "z": "bd1f60e0.1331",
        "name": "Rep to Base64",
        "rules": [
            {
                "t": "set",
                "p": "documentDecoded",
                "pt": "msg",
                "to": "$base64decode(documentBase64encoded)\t",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "decryptedKey",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "documentBase64encoded",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 520,
        "wires": [
            [
                "cbd83cd8.cea2d8"
            ]
        ]
    },
    {
        "id": "d4a0cf1b.422418",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Error 401",
        "func": "msg.payload = \"Wrong Document\";\n//msg.payload = \"Wrong Document according to Hash\";\nmsg.statusCode = 401;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 300,
        "wires": [
            [
                "dabdccb7.b8b1d"
            ]
        ]
    },
    {
        "id": "dabdccb7.b8b1d",
        "type": "debug",
        "z": "bd1f60e0.1331",
        "name": "Log",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "78b6f126.e3b36",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Error 401",
        "func": "msg.payload = \"Wrong XML according to XSD\";\nmsg.statusCode = 401;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 300,
        "wires": [
            [
                "509762b5.7cc484"
            ]
        ]
    },
    {
        "id": "509762b5.7cc484",
        "type": "debug",
        "z": "bd1f60e0.1331",
        "name": "Log",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1050,
        "y": 220,
        "wires": []
    },
    {
        "id": "655ed409.8520d4",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Kolejka MQ",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "c56b2b41.309f8"
            ]
        ]
    },
    {
        "id": "713a88cd.9502d",
        "type": "change",
        "z": "bd1f60e0.1331",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "referencenumber",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "casetimestamp",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "documentDecoded",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 400,
        "wires": [
            [
                "e6a2f3d.a3bd89",
                "bae485e4.9a98f",
                "e16ebe08.110418"
            ]
        ]
    },
    {
        "id": "88ead76.8ea17a8",
        "type": "xml",
        "z": "bd1f60e0.1331",
        "name": "",
        "property": "documentDecoded",
        "attr": "",
        "chr": "",
        "x": 990,
        "y": 520,
        "wires": [
            [
                "34f649de.69e236"
            ]
        ]
    },
    {
        "id": "34f649de.69e236",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Format payloads to insert",
        "func": "var reportPayload = {}\nreportPayload.referencenumber = msg.referencenumber\nreportPayload.UUID = msg.documentDecoded.Report.UUID.toString()\nreportPayload.Timestamp = msg.documentDecoded.Report.Timestamp.toString()\nreportPayload.Name = msg.documentDecoded.Report.Name.toString()\nreportPayload.Number = msg.documentDecoded.Report.Number.toString()\n\nvar initRequest = {}\ninitRequest.referencenumber = msg.referencenumber\ninitRequest.casetimestamp = msg.casetimestamp\ninitRequest.UUID = msg.payload.UUID.toString()\ninitRequest.Timestamp = msg.payload.Timestamp.toString()\ninitRequest.RSAEncryptKey = msg.payload.RSAEncryptKey.toString()\ninitRequest.AESEncryptDoc = msg.payload.AESEncryptDoc.toString()\ninitRequest.HashSHA256 = msg.payload.HashSHA256.toString()\ninitRequest.SignatureValue = msg.payload.SignatureValue.toString()\nmsg.payload = {}\nmsg.payload.reportPayload = reportPayload\nmsg.payload.initRequest = initRequest\nmsg.topic = msg.referencenumber\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 520,
        "wires": [
            [
                "713a88cd.9502d"
            ]
        ]
    },
    {
        "id": "e262e982.5fea4",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Verify with Hash",
        "func": "const crypto =  global.get('crypto');\nconst hash = crypto.createHash('sha256');\nhash.update(msg.documentBase64encoded);\nvar newHash = hash.digest('hex')\nvar compareResult = newHash.localeCompare(msg.payload.HashSHA256)\n\nif (compareResult != 0 ) {\n  return [ msg, null];\n} else {\n   return [null, msg];\n}\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 600,
        "y": 400,
        "wires": [
            [
                "d4a0cf1b.422418"
            ],
            [
                "2f873269.adf5ee"
            ]
        ]
    },
    {
        "id": "dcbb4214.a0ea28",
        "type": "debug",
        "z": "bd1f60e0.1331",
        "name": "Log2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1530,
        "y": 240,
        "wires": []
    },
    {
        "id": "bae485e4.9a98f",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Set reportPayload",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./reports');\nlocalStorage.setItem(msg.topic, JSON.stringify(msg.payload.reportPayload));\n\n//localStorage.setItem(msg.topic, Array.from(msg.payload.reportPayload));\n//localStorage.setItem(msg.topic, msg.payload.reportPayload.toString('utf8'));\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 220,
        "wires": [
            [
                "dcbb4214.a0ea28"
            ]
        ]
    },
    {
        "id": "e16ebe08.110418",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Set initRequest",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./initrequest');\n\nlocalStorage.setItem(msg.topic, JSON.stringify(msg.payload.initRequest));\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 300,
        "wires": [
            [
                "dcbb4214.a0ea28"
            ]
        ]
    },
    {
        "id": "4840d7e6.f71288",
        "type": "link in",
        "z": "bd1f60e0.1331",
        "name": "in_mainflow",
        "links": [
            "7f30e89a.e026c"
        ],
        "x": 55,
        "y": 200,
        "wires": [
            [
                "ab3176e1.c6052"
            ]
        ]
    },
    {
        "id": "e6a2f3d.a3bd89",
        "type": "debug",
        "z": "bd1f60e0.1331",
        "name": "Log2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1530,
        "y": 400,
        "wires": []
    },
    {
        "id": "ab3176e1.c6052",
        "type": "function",
        "z": "bd1f60e0.1331",
        "name": "Rate Limiter",
        "func": "//var interval = (1000*60*10); // minimum interval between messages (ms)\nvar interval = (1000); // minimum interval between messages (ms)\ncontext.lastTime = context.lastTime || 0;\n\nvar now = Date.now();\n\nif (now-context.lastTime > interval) {\n  context.lastTime = now;\n  return msg;\n} else {\n  return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "2ccdd759.abd988"
            ]
        ]
    },
    {
        "id": "ad5a2e44.436dc",
        "type": "function",
        "z": "58c2be53.4582c",
        "name": "Get reportPayload",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./reports');\n\nif (msg.topic === \"\") {\nvar archive = [];\nfor (var i = 0; i<localStorage.length; i++) {\narchive[i] = localStorage.getItem(localStorage.key(i));\n}\n\nmsg.payload = archive\n\n} else {\n//msg.payload = Array.from(localStorage.getItem(msg.topic))\nmsg.payload = JSON.parse(localStorage.getItem(msg.topic))\n}\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 40,
        "wires": [
            [
                "2680409c.6ec248"
            ]
        ]
    },
    {
        "id": "63a61b0f.8b555c",
        "type": "function",
        "z": "58c2be53.4582c",
        "name": "Get initRequest",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./initrequest');\n//msg.payload = JSON.stringify(msg.payload)\n\nif (msg.topic === \"\") {\nvar archive = [];\nfor (var i = 0; i<localStorage.length; i++) {\narchive[i] = localStorage.getItem(localStorage.key(i));\n}\n\nmsg.payload = archive\n\n} else {\nmsg.payload = JSON.parse(localStorage.getItem(msg.topic))\n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 200,
        "wires": [
            [
                "5682e468.6a14e4"
            ]
        ]
    },
    {
        "id": "f30cc31d.101d88",
        "type": "inject",
        "z": "58c2be53.4582c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "ad5a2e44.436dc",
                "63a61b0f.8b555c"
            ]
        ]
    },
    {
        "id": "d2b52d31.948cf",
        "type": "debug",
        "z": "58c2be53.4582c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "7c0d96ee.718ab8",
        "type": "ui_etable",
        "z": "58c2be53.4582c",
        "payload": "[{\"title\":\"referencenumber\",\"field\":\"referencenumber\",\"width\":\"20%\",\"editor\":false},{\"title\":\"UUID\",\"field\":\"UUID\",\"width\":\"20%\",\"editor\":false},{\"title\":\"Timestamp\",\"field\":\"Timestamp\",\"width\":\"20%\",\"editor\":false},{\"title\":\"Name\",\"field\":\"Name\",\"width\":\"20%\",\"editor\":false},{\"title\":\"Number\",\"field\":\"Number\",\"width\":\"20%\",\"editor\":false}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"autoResize\":true,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"height\":\"300px\"}",
        "group": "3b9b9c25.9d5e1c",
        "name": "reportPayload",
        "order": 2,
        "width": "13",
        "height": "4",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "2680409c.6ec248",
        "type": "function",
        "z": "58c2be53.4582c",
        "name": "remove double quote ",
        "func": "for (var i = 0; i < msg.payload.length; i++) {\n        msg.payload[i] = eval('null,' + msg.payload[i]);\n        }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 40,
        "wires": [
            [
                "7c0d96ee.718ab8",
                "d2b52d31.948cf"
            ]
        ]
    },
    {
        "id": "5682e468.6a14e4",
        "type": "function",
        "z": "58c2be53.4582c",
        "name": "remove double quote ",
        "func": "for (var i = 0; i < msg.payload.length; i++) {\n        msg.payload[i] = eval('null,' + msg.payload[i]);\n        }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 200,
        "wires": [
            [
                "d2b52d31.948cf",
                "5e15fa13.a4b52c"
            ]
        ]
    },
    {
        "id": "5e15fa13.a4b52c",
        "type": "ui_etable",
        "z": "58c2be53.4582c",
        "payload": "[{\"title\":\"referencenumber\",\"field\":\"referencenumber\",\"width\":\"300%\",\"editor\":false},{\"title\":\"casetimestamp\",\"field\":\"casetimestamp\",\"width\":\"200%\",\"editor\":false},{\"title\":\"UUID\",\"field\":\"UUID\",\"width\":\"150%\",\"editor\":false},{\"title\":\"Timestamp\",\"field\":\"Timestamp\",\"width\":\"50%\",\"editor\":false}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"height\":\"300px\"}",
        "group": "3b9b9c25.9d5e1c",
        "name": "initRequest",
        "order": 1,
        "width": "13",
        "height": "4",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 810,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e78e6beb.5ccee8",
        "type": "function",
        "z": "1d546a54.b83da6",
        "name": "Get reportPayload",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./reports');\n\n\nif (msg.topic === \"\") {\nvar archive = [];\nfor (var i = 0; i<localStorage.length; i++) {\narchive[i] = localStorage.getItem(localStorage.key(i));\n}\n\nmsg.payload = archive\n\n} else {\nmsg.payload = JSON.parse(localStorage.getItem(msg.topic))\n\n//msg.payload = JSON.stringify(localStorage.getItem(msg.topic))\n//msg.payload = localStorage.getItem(msg.topic)\n\n}\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 80,
        "wires": [
            [
                "7e2b41d5.eee16"
            ]
        ]
    },
    {
        "id": "f1676a24.d2705",
        "type": "function",
        "z": "1d546a54.b83da6",
        "name": "Get initRequest",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./initrequest');\n\nif (msg.topic === \"\") {\nvar archive = [];\nfor (var i = 0; i<localStorage.length; i++) {\narchive[i] = localStorage.getItem(localStorage.key(i));\n}\n\nmsg.payload = archive\n\n} else {\nmsg.payload = JSON.parse(localStorage.getItem(msg.topic))\n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "7e2b41d5.eee16"
            ]
        ]
    },
    {
        "id": "1d4fc57f.9d6dd3",
        "type": "function",
        "z": "1d546a54.b83da6",
        "name": "Clear reportPayload",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./reports');\n\nlocalStorage.clear();\nmsg.payload = true\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 200,
        "wires": [
            [
                "3e9226ea.c4d14a"
            ]
        ]
    },
    {
        "id": "56ae82d1.85e3e4",
        "type": "function",
        "z": "1d546a54.b83da6",
        "name": "Clear initrequest",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./initrequest');\n\nlocalStorage.clear();\nmsg.payload = true\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "3e9226ea.c4d14a"
            ]
        ]
    },
    {
        "id": "f671019f.6c5c1",
        "type": "inject",
        "z": "1d546a54.b83da6",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "1d4fc57f.9d6dd3"
            ]
        ]
    },
    {
        "id": "6d932a6.321ebd4",
        "type": "inject",
        "z": "1d546a54.b83da6",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 240,
        "wires": [
            [
                "56ae82d1.85e3e4"
            ]
        ]
    },
    {
        "id": "3e9226ea.c4d14a",
        "type": "debug",
        "z": "1d546a54.b83da6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "e2a4e827.6aa68",
        "type": "inject",
        "z": "1d546a54.b83da6",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "e78e6beb.5ccee8"
            ]
        ]
    },
    {
        "id": "2cef9149.774abe",
        "type": "inject",
        "z": "1d546a54.b83da6",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 120,
        "wires": [
            [
                "f1676a24.d2705"
            ]
        ]
    },
    {
        "id": "7e2b41d5.eee16",
        "type": "debug",
        "z": "1d546a54.b83da6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "2ce93816.b42068",
        "type": "function",
        "z": "63b5c0f9.cf726",
        "name": "Set reportPayload",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./reports');\nlocalStorage.setItem(msg.topic, JSON.stringify(msg.payload.reportPayload));\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1872532c.f0182d",
        "type": "function",
        "z": "63b5c0f9.cf726",
        "name": "Get reportPayload",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./reports');\n\nif (msg.topic === \"\") {\nvar archive = [];\nfor (var i = 0; i<localStorage.length; i++) {\narchive[i] = localStorage.getItem(localStorage.key(i));\n}\n\nmsg.payload = archive\n\n} else {\nmsg.payload = JSON.parse(localStorage.getItem(msg.topic))\n}\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7308424e.e65ab4",
        "type": "function",
        "z": "63b5c0f9.cf726",
        "name": "Clear reportPayload",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./reports');\n\nlocalStorage.clear();\nmsg.payload = true\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "331f19ca.cd66a6",
        "type": "function",
        "z": "63b5c0f9.cf726",
        "name": "Delete reportPayload",
        "func": "var LocalStorage = global.get('localstorage').LocalStorage;\nvar localStorage = new LocalStorage('./reports');\n\nlocalStorage.removeItem(msg.topic);\n\nmsg.payload = true\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9ed50114.7a98a",
        "type": "http in",
        "z": "84528de1.e0a41",
        "name": "",
        "url": "/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "2be83603.ec874a"
            ]
        ]
    },
    {
        "id": "2be83603.ec874a",
        "type": "template",
        "z": "84528de1.e0a41",
        "name": "web-template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n   <head>\n      <!-- The jQuery library is a prerequisite for all jqSuite products -->\n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/jquery.min.js\"></script> \n      <!-- We support more than 40 localizations -->\n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/trirand/i18n/grid.locale-en.js\"></script>\n      <!-- This is the Javascript file of jqGrid -->   \n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/trirand/jquery.jqGrid.min.js\"></script>\n      <!-- This is the localization file of the grid controlling messages, labels, etc.\n      <!-- A link to a jQuery UI ThemeRoller theme, more than 22 built-in and many more custom -->\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://struts.jgeppert.com/struts2-jquery-grid-showcase/themes/showcase/jquery-ui.css\" />\n      <!-- The link to the CSS that the grid needs -->\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://www.guriddo.net/demo/css/trirand/ui.jqgrid.css\" />\n      <meta charset=\"utf-8\" />\n      <title>Demo CRUD with jqGrid</title>\n      <script type=\"text/javascript\"></script>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"http://www.guriddo.net/B1D671CF-E532-4481-99AA-19F420D90332/netdefender/hui/ndhui.css\" />\n   </head>\n   <body>\n      <script type=\"text/javascript\" language=\"javascript\" src=\"http://www.guriddo.net/B1D671CF-E532-4481-99AA-19F420D90332/netdefender/hui/ndhui.js?0=0&0=0&0=0\"></script>\n      <table id=\"jqGrid\"></table>\n      <div id=\"jqGridPager\"></div>\n      <script type=\"text/javascript\"> \n         $(document).ready(function () {\n             $(\"#jqGrid\").jqGrid({\n                 url: '/search',\n                 mtype: \"GET\",\n                 datatype: \"json\",\n                 colModel: [\n                     { label: 'ID', name: 'id', key: true, search: false, width: 75 },\n                     { label: 'Name', name: 'name', width: 150, editable: true, formoptions: { colpos: 1, rowpos: 1 }  },\n                     { label: 'Last Name', name: 'lastname', width: 150, editable: true, edittype: \"select\", formoptions: { colpos: 1, rowpos: 2 },\n                       editoptions: {\n                            dataUrl:'/search/lastname',\n                            type:\"GET\",\n                            buildSelect: function(data) {\n                                var response = jQuery.parseJSON(data); //JSON data\n                                var s = '<select>';\n                                if (response && response.length) {\n                                    s += '<option hidden=\"true\">--- Select Lastname ---</option>';\n                                    for (var i = 0, l=response.length; i<l ; i++) {\n                                    var id = response[i].id;\n                                    var val = response[i].value; \n                                    // You can concatenate ID or any other string here\n                                    //For example: var ri = response[i].id + response[i].value; \n                                        s += '<option value=\"'+id+'\">'+val+'</option>';\n                                    }\n                                }\n                                return s + \"</select>\";\n                            } \n                         } \n                     },\n                     { label: 'Code', name: 'code', width: 150, editable: true, formoptions: { colpos: 2, rowpos: 1 } },  \n                     { label: 'Married', name: 'married', width: 150, align: \"center\", search: false, editable: true, edittype: \"checkbox\", formatter: \"checkbox\", editoptions: { value: \"1:0\" }, formoptions: { colpos: 2, rowpos: 2 } }\n                 ],\n                 width: 500,\n                 height: 260,\n                 rowNum: 10,\n                 loadonce: true,\n                 viewrecords: true,\n                 pager: \"#jqGridPager\"\n             });\n             \n             $('#jqGrid').navGrid('#jqGridPager',\n                 // The buttons to appear on the toolbar of the grid\n                 { edit: true, add: true, del: true, search: true, refresh: true, view: true, position: \"left\", cloneToTop: true },\n                 \n                 // Options for the Edit Dialog\n                 {\n                     url: '/update',\n                     editCaption: \"The Edit Dialog\",\n                     recreateForm: true,\n\t\t\t\t\t //checkOnUpdate : true,\n\t\t\t\t\t //checkOnSubmit : true,\n\t\t\t\t\t beforeSubmit : function( postdata, form , oper) {\n\t\t\t\t\t\t if(confirm('Are you sure you want to update this information?') ) {\n\t\t\t\t\t\t\t // Do something\n\t\t\t\t\t\t \t return [true,'/update'];\n\t\t\t\t\t\t } else {\n\t\t\t\t\t\t\treturn [false, 'Update failed!'];\n\t\t\t\t\t\t }\n\t\t\t\t\t },\n                     afterSubmit: function () {\n                         $(this).jqGrid(\"setGridParam\", {datatype: 'json'});\n                         return [true];\n                     },\n                     closeAfterEdit: true,\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n                 },\n                 // Options for the Add Dialog\n                 {\n                     url: '/insert',\n                     addCaption: \"Add Dialog\",\n                     afterSubmit: function () {\n                         $(this).jqGrid(\"setGridParam\", {datatype: 'json'});\n                         return [true];\n                     },\n                     closeAfterAdd: true,\n                     recreateForm: true,\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n                 },\n                 // Options for the Delete Dialog\n                 {   \n                     url: '/delete',\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n             });\n             $(\"#jqGrid\").jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true });\n         });\n      </script>\n   </body>\n</html>",
        "x": 360,
        "y": 180,
        "wires": [
            [
                "13943d72.dc7ffb"
            ]
        ]
    },
    {
        "id": "13943d72.dc7ffb",
        "type": "http response",
        "z": "84528de1.e0a41",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 180,
        "wires": []
    },
    {
        "id": "e85abd38.07593",
        "type": "http in",
        "z": "84528de1.e0a41",
        "name": "",
        "url": "/search",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "a71858a.71b56a8"
            ]
        ]
    },
    {
        "id": "a71858a.71b56a8",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "search-query",
        "func": "//msg.topic=\"SELECT CONCAT('M00','',test.id) AS id,test.name AS name,lastname.lastname AS lastname,test.code AS code,test.married AS married FROM test INNER JOIN lastname ON lastname.id = test.lastname ORDER BY test.id DESC\";\nmsg.topic=\"SELECT test.id AS id,test.name AS name,lastname.lastname AS lastname,test.code AS code,test.married AS married FROM test INNER JOIN lastname ON lastname.id = test.lastname ORDER BY test.id DESC\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 240,
        "wires": [
            [
                "48e95a39.926984"
            ]
        ]
    },
    {
        "id": "cddcba84.105a9",
        "type": "http response",
        "z": "84528de1.e0a41",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 240,
        "wires": []
    },
    {
        "id": "d87027.14a20fd8",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "search-response",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745,
        "y": 240,
        "wires": [
            [
                "f2787648.341ec"
            ]
        ]
    },
    {
        "id": "f2787648.341ec",
        "type": "json",
        "z": "84528de1.e0a41",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 240,
        "wires": [
            [
                "cddcba84.105a9"
            ]
        ]
    },
    {
        "id": "97a381.d3967c8",
        "type": "http in",
        "z": "84528de1.e0a41",
        "name": "",
        "url": "/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "2dee7136.faf09e"
            ]
        ]
    },
    {
        "id": "ebaa0d7a.b64038",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "insert-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 735,
        "y": 360,
        "wires": [
            [
                "fe4a5490.b89d7"
            ]
        ]
    },
    {
        "id": "2dee7136.faf09e",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "insert-query",
        "func": "msg.topic=\"INSERT INTO test (name,lastname,code,married,timestamp) VALUES ('\" + msg.payload.name + \"','\" + msg.payload.lastname + \"','\" + msg.payload.code + \"','\" + msg.payload.married + \"',CURRENT_TIMESTAMP)\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 360,
        "wires": [
            [
                "d78aa52.32dfd58"
            ]
        ]
    },
    {
        "id": "fe4a5490.b89d7",
        "type": "http response",
        "z": "84528de1.e0a41",
        "name": "",
        "x": 1080,
        "y": 360,
        "wires": []
    },
    {
        "id": "2c3ba9f8.09b78e",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "lastname-query",
        "func": "msg.topic=\"SELECT id, lastname as value FROM lastname\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 300,
        "wires": [
            [
                "704a114c.998308"
            ]
        ]
    },
    {
        "id": "e95f9cf1.29d76",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "lastname-response",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745,
        "y": 300,
        "wires": [
            [
                "3fb4fd0f.cd4622"
            ]
        ]
    },
    {
        "id": "b3015f84.6bd1e8",
        "type": "http in",
        "z": "84528de1.e0a41",
        "name": "",
        "url": "/search/lastname",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "2c3ba9f8.09b78e"
            ]
        ]
    },
    {
        "id": "b2985fd2.fab71",
        "type": "http response",
        "z": "84528de1.e0a41",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 300,
        "wires": []
    },
    {
        "id": "3fb4fd0f.cd4622",
        "type": "json",
        "z": "84528de1.e0a41",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 300,
        "wires": [
            [
                "b2985fd2.fab71"
            ]
        ]
    },
    {
        "id": "a6f7fe9b.813f2",
        "type": "http in",
        "z": "84528de1.e0a41",
        "name": "",
        "url": "/delete",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "f7d600e6.948618"
            ]
        ]
    },
    {
        "id": "fe454c8.8ebd8b",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "delete-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 735,
        "y": 480,
        "wires": [
            [
                "95a5ed4c.fe701"
            ]
        ]
    },
    {
        "id": "f7d600e6.948618",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "delete-query",
        "func": "msg.topic=\"DELETE FROM test WHERE id='\" + msg.payload.id + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 480,
        "wires": [
            [
                "1047b884.fe0acf"
            ]
        ]
    },
    {
        "id": "95a5ed4c.fe701",
        "type": "http response",
        "z": "84528de1.e0a41",
        "name": "",
        "x": 1080,
        "y": 480,
        "wires": []
    },
    {
        "id": "13bdec6.8bfda14",
        "type": "http in",
        "z": "84528de1.e0a41",
        "name": "",
        "url": "/update",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "e80fc5f8.820068"
            ]
        ]
    },
    {
        "id": "c347981d.e2eaf8",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "update-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745,
        "y": 420,
        "wires": [
            [
                "3603db2c.035024"
            ]
        ]
    },
    {
        "id": "e80fc5f8.820068",
        "type": "function",
        "z": "84528de1.e0a41",
        "name": "update-query",
        "func": "msg.topic=\"UPDATE test SET name='\" + msg.payload.name + \"', lastname='\" + msg.payload.lastname + \"', code='\" + msg.payload.code + \"', married='\" + msg.payload.married + \"' WHERE id='\" + msg.payload.id + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 420,
        "wires": [
            [
                "46a02e7b.f6b1d8"
            ]
        ]
    },
    {
        "id": "3603db2c.035024",
        "type": "http response",
        "z": "84528de1.e0a41",
        "name": "",
        "x": 1080,
        "y": 420,
        "wires": []
    },
    {
        "id": "23622df1.e166b2",
        "type": "comment",
        "z": "84528de1.e0a41",
        "name": "https://flows.nodered.org/flow/9a57908f031def68946f6bdf4cfb94a4",
        "info": "",
        "x": 440,
        "y": 40,
        "wires": []
    },
    {
        "id": "48e95a39.926984",
        "type": "mysql",
        "z": "84528de1.e0a41",
        "mydb": "d48d08d1.d221d8",
        "name": "database",
        "x": 550,
        "y": 240,
        "wires": [
            [
                "d87027.14a20fd8"
            ]
        ]
    },
    {
        "id": "704a114c.998308",
        "type": "mysql",
        "z": "84528de1.e0a41",
        "mydb": "d48d08d1.d221d8",
        "name": "database",
        "x": 550,
        "y": 300,
        "wires": [
            [
                "e95f9cf1.29d76"
            ]
        ]
    },
    {
        "id": "d78aa52.32dfd58",
        "type": "mysql",
        "z": "84528de1.e0a41",
        "mydb": "d48d08d1.d221d8",
        "name": "database",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "ebaa0d7a.b64038"
            ]
        ]
    },
    {
        "id": "46a02e7b.f6b1d8",
        "type": "mysql",
        "z": "84528de1.e0a41",
        "mydb": "d48d08d1.d221d8",
        "name": "database",
        "x": 550,
        "y": 420,
        "wires": [
            [
                "c347981d.e2eaf8"
            ]
        ]
    },
    {
        "id": "1047b884.fe0acf",
        "type": "mysql",
        "z": "84528de1.e0a41",
        "mydb": "d48d08d1.d221d8",
        "name": "database",
        "x": 550,
        "y": 480,
        "wires": [
            [
                "fe454c8.8ebd8b"
            ]
        ]
    },
    {
        "id": "9bb37ef104e56aac",
        "type": "comment",
        "z": "84528de1.e0a41",
        "name": "node-red-node-mysql",
        "info": "",
        "x": 300,
        "y": 80,
        "wires": []
    },
    {
        "id": "2332fdc.db7e382",
        "type": "http in",
        "z": "24edd7b1.7094d8",
        "name": "/insert",
        "url": "/insert",
        "method": "post",
        "swaggerDoc": "380adfe.9aad82",
        "x": 71.49998474121094,
        "y": 40,
        "wires": [
            [
                "7d5beb5a.a5e524"
            ]
        ]
    },
    {
        "id": "59c53800.319f28",
        "type": "http response",
        "z": "24edd7b1.7094d8",
        "name": "",
        "x": 1150,
        "y": 240,
        "wires": []
    },
    {
        "id": "57dda65.d568558",
        "type": "http in",
        "z": "24edd7b1.7094d8",
        "name": "/update",
        "url": "/update",
        "method": "put",
        "swaggerDoc": "",
        "x": 62.49998474121094,
        "y": 265,
        "wires": [
            [
                "c9c3b367.e61b68"
            ]
        ]
    },
    {
        "id": "88944d0b.679a78",
        "type": "http in",
        "z": "24edd7b1.7094d8",
        "name": "/delete",
        "url": "/delete",
        "method": "delete",
        "swaggerDoc": "",
        "x": 69.49998474121094,
        "y": 376,
        "wires": [
            [
                "78326203.00d7c4"
            ]
        ]
    },
    {
        "id": "5dea6f6c.869fa8",
        "type": "http in",
        "z": "24edd7b1.7094d8",
        "name": "/selectall",
        "url": "/selectall",
        "method": "get",
        "swaggerDoc": "",
        "x": 73,
        "y": 97.99998474121094,
        "wires": [
            [
                "ac4d55f6.d55608"
            ]
        ]
    },
    {
        "id": "15c51369.06c0fd",
        "type": "json",
        "z": "24edd7b1.7094d8",
        "name": "",
        "x": 876.5,
        "y": 111.4000244140625,
        "wires": [
            [
                "59c53800.319f28"
            ]
        ]
    },
    {
        "id": "bcdba517.1ea47",
        "type": "objectid",
        "z": "24edd7b1.7094d8",
        "name": "",
        "x": 437.5,
        "y": 165,
        "wires": [
            [
                "78b48be9.32e0fc"
            ]
        ]
    },
    {
        "id": "fa27ac39.d6588",
        "type": "function",
        "z": "24edd7b1.7094d8",
        "name": "extract _id",
        "func": "msg._id=msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 261.5,
        "y": 163.60003662109375,
        "wires": [
            [
                "bcdba517.1ea47"
            ]
        ]
    },
    {
        "id": "c54ef4e9.084998",
        "type": "function",
        "z": "24edd7b1.7094d8",
        "name": "update request",
        "func": "msg.result=msg.req.body;\ndelete msg.req.body._id;\nmsg.payload=[\n   msg.payload,\n   msg.req.body\n    ];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 532.5,
        "y": 241,
        "wires": [
            [
                "85c0bf52.2e9678"
            ]
        ]
    },
    {
        "id": "4a0288c4.68014",
        "type": "http in",
        "z": "24edd7b1.7094d8",
        "name": "/select",
        "url": "/select",
        "method": "get",
        "swaggerDoc": "",
        "x": 64.5,
        "y": 163.20001220703125,
        "wires": [
            [
                "fa27ac39.d6588"
            ]
        ]
    },
    {
        "id": "c9c3b367.e61b68",
        "type": "function",
        "z": "24edd7b1.7094d8",
        "name": "extract _id",
        "func": "msg._id=msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 207,
        "y": 274.79998779296875,
        "wires": [
            [
                "299ab295.117926"
            ]
        ]
    },
    {
        "id": "78326203.00d7c4",
        "type": "function",
        "z": "24edd7b1.7094d8",
        "name": "extract _id",
        "func": "msg._id=msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 245,
        "y": 379.79998779296875,
        "wires": [
            [
                "81679542.747d4"
            ]
        ]
    },
    {
        "id": "81679542.747d4",
        "type": "objectid",
        "z": "24edd7b1.7094d8",
        "name": "",
        "x": 465,
        "y": 374.79998779296875,
        "wires": [
            [
                "5c365922.a0756"
            ]
        ]
    },
    {
        "id": "299ab295.117926",
        "type": "objectid",
        "z": "24edd7b1.7094d8",
        "name": "",
        "x": 366,
        "y": 224.79998779296875,
        "wires": [
            [
                "c54ef4e9.084998"
            ]
        ]
    },
    {
        "id": "936bdf03.41d648",
        "type": "http in",
        "z": "24edd7b1.7094d8",
        "name": "/show",
        "url": "/show",
        "method": "get",
        "swaggerDoc": "",
        "x": 88,
        "y": 459,
        "wires": [
            [
                "5db6c55f.f3539c"
            ]
        ]
    },
    {
        "id": "604373fb.00d1dc",
        "type": "json",
        "z": "24edd7b1.7094d8",
        "name": "",
        "x": 643,
        "y": 462,
        "wires": [
            [
                "d02fb340.d1a7a"
            ]
        ]
    },
    {
        "id": "d02fb340.d1a7a",
        "type": "template",
        "z": "24edd7b1.7094d8",
        "name": "Web Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"pl\">\n<head>\n    <title>Licence Plate</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script>\n\n    <script type=\"text/javascript\">\n        $(function () {\n            var db = {{#payload}}{{{.}}}{{/payload}};\n                $(\"#jsgrid\").jsGrid({\n                    width: \"100%\",\n                    inserting: true,\n                    editing: true,\n                    sorting: true,\n                    paging: true,\n\n                    data: db,\n\n                    fields: [\n                        { title:\"Task\", name: \"task\", type: \"text\", width: 30 },\n                        { type: \"control\" }\n                    ],\n               \n                    controller: {\n                        insertItem: function(item) {\n                            return $.ajax({\n                                type: \"POST\",\n                                url: \"/insert\",\n                                data: item\n                            });\n                        },\n                        updateItem: function(item) {\n                           return $.ajax({\n                                type: \"PUT\",\n                                url: \"/update\",\n                                data: item\n                            });\n                        },\n                        deleteItem: function(item) {\n                            return $.ajax({\n                                type: \"DELETE\",\n                                url: \"/delete\",\n                                data: item\n                            });\n                        }\n                    }   \n                });\n            });\n    \n  </script>\n</head>\n<body class=\"container\">\n    <section class=\"row\">\n        \n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-2\" id=\"jsgrid\">\n        </div>\n    </section>\n</body>\n</html>\n\n\n\n\n",
        "x": 831,
        "y": 457,
        "wires": [
            [
                "59c53800.319f28"
            ]
        ]
    },
    {
        "id": "7d5beb5a.a5e524",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "52ab3e5a.706da8",
        "name": "cruddb insert todo",
        "collection": "todo",
        "operation": "insert",
        "x": 847.5,
        "y": 40.399993896484375,
        "wires": [
            [
                "59c53800.319f28"
            ]
        ]
    },
    {
        "id": "85c0bf52.2e9678",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "52ab3e5a.706da8",
        "name": "cruddb upate todo",
        "collection": "todo",
        "operation": "update",
        "x": 760.5,
        "y": 243.5999755859375,
        "wires": [
            [
                "59c53800.319f28"
            ]
        ]
    },
    {
        "id": "5c365922.a0756",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "52ab3e5a.706da8",
        "name": "cruddb delete todo",
        "collection": "todo",
        "operation": "deleteOne",
        "x": 688.5,
        "y": 365.60003662109375,
        "wires": [
            [
                "59c53800.319f28"
            ]
        ]
    },
    {
        "id": "ac4d55f6.d55608",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "52ab3e5a.706da8",
        "name": "cruddb select all todo",
        "collection": "todo",
        "operation": "find.toArray",
        "x": 418.5,
        "y": 89.59996032714844,
        "wires": [
            [
                "15c51369.06c0fd"
            ]
        ]
    },
    {
        "id": "78b48be9.32e0fc",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "52ab3e5a.706da8",
        "name": "cruddb select one todo",
        "collection": "todo",
        "operation": "findOne",
        "x": 655.5,
        "y": 156,
        "wires": [
            [
                "15c51369.06c0fd"
            ]
        ]
    },
    {
        "id": "5db6c55f.f3539c",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "52ab3e5a.706da8",
        "name": "cruddb select all todo",
        "collection": "todo",
        "operation": "find.toArray",
        "x": 362,
        "y": 463,
        "wires": [
            [
                "604373fb.00d1dc"
            ]
        ]
    },
    {
        "id": "ad456d03.552998",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "99c27679.677b48",
        "name": "",
        "collection": "LicencePlate",
        "operation": "update",
        "x": 872.9998779296875,
        "y": 280.8333740234375,
        "wires": [
            []
        ]
    },
    {
        "id": "a35bc387.429af",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "99c27679.677b48",
        "name": "",
        "collection": "LicencePlate",
        "operation": "find.toArray",
        "x": 710.88330078125,
        "y": 155,
        "wires": [
            []
        ]
    },
    {
        "id": "fd159119.be819",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "99c27679.677b48",
        "name": "",
        "collection": "LicencePlate",
        "operation": "insert",
        "x": 879.8831787109375,
        "y": 377.13330078125,
        "wires": [
            []
        ]
    },
    {
        "id": "2bde3791.c91758",
        "type": "mongodb2 in",
        "z": "24edd7b1.7094d8",
        "service": "_ext_",
        "configNode": "99c27679.677b48",
        "name": "",
        "collection": "LicencePlate",
        "operation": "deleteOne",
        "x": 1000,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2974728d.84f1e6",
        "type": "http in",
        "z": "edfc21e0.78edc",
        "name": "",
        "url": "/grid/update",
        "method": "put",
        "swaggerDoc": "",
        "x": 106,
        "y": 280.7000732421875,
        "wires": [
            [
                "134ed0ba.692c27"
            ]
        ]
    },
    {
        "id": "471e8c7e.560cec",
        "type": "http response",
        "z": "edfc21e0.78edc",
        "name": "",
        "x": 1341.9998779296875,
        "y": 279.433349609375,
        "wires": []
    },
    {
        "id": "1a4ea6ee.f6c169",
        "type": "function",
        "z": "edfc21e0.78edc",
        "name": "update request",
        "func": "/*\nmsg.result correspond à l'objet mis à jour,\nle delete permet de supprimer la propriété\n_id de l'objet, en effet l'_id est géré directement\npar le noued OjectId\npour la requète update  \non doit fournir un tableau \n[\n<query>,\n<valeur mises à jour>\n]\n\nici ce sera de la forme:\n[\n    {_id:ObjectId(\"xxx\")},\n    {\"nom\": \"toto\", \"prenom\": \"tutu\", \n        \"immatriculation\": \"AB123CD\", \n        \"heure\": null, \"minute\": null\n    }\n]\n*/\nmsg.result=msg.req.body;\ndelete msg.req.body._id;\nmsg.payload=[\n   msg.payload,\n   msg.req.body\n    ];\nreturn msg;\n\n",
        "outputs": "1",
        "noerr": 0,
        "x": 632.7666015625,
        "y": 281.066650390625,
        "wires": [
            []
        ]
    },
    {
        "id": "134ed0ba.692c27",
        "type": "function",
        "z": "edfc21e0.78edc",
        "name": "extract _id",
        "func": "msg._id=msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 283.88336181640625,
        "y": 281.5,
        "wires": [
            [
                "741f7656.3a6e78"
            ]
        ]
    },
    {
        "id": "741f7656.3a6e78",
        "type": "objectid",
        "z": "edfc21e0.78edc",
        "name": "",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "1a4ea6ee.f6c169"
            ]
        ]
    },
    {
        "id": "fc59088b.b8021",
        "type": "template",
        "z": "edfc21e0.78edc",
        "name": "Web Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <title>Licence Plate</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css\" />\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css\" />\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css\" />\n    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js\"></script>\n\n    <script type=\"text/javascript\">\n        $(function () {\n            var db = {{#payload}}{{{.}}}{{/payload}};\n                $(\"#jsgrid\").jsGrid({\n                    width: \"100%\",\n                    inserting: true,\n                    editing: true,\n                    sorting: true,\n                    paging: true,\n\n                    data: db,\n\n                    fields: [\n                        { title:\"Nom\", name: \"nom\", type: \"text\", width: 50 },\n                        { title:\"Prénom\", name: \"prenom\", type: \"text\", width: 50 },\n                        { title:\"Plaque\", name: \"immatriculation\", type: \"text\", width: 50 },\n                        { title:\"Heure\", name: \"heure\", type:\"number\", width: 25},\n                        { title:\"Minute\", align:\"left\",  name: \"minute\", type:\"number\" , width: 25},\n                        { type: \"control\" }\n                    ],\n               \n                    controller: {\n                        insertItem: function(item) {\n                            return $.ajax({\n                                type: \"POST\",\n                                url: \"/grid/insert\",\n                                data: item\n                            });\n                        },\n                        updateItem: function(item) {\n                           return $.ajax({\n                                type: \"PUT\",\n                                url: \"/grid/update\",\n                                data: item\n                            });\n                        },\n                        deleteItem: function(item) {\n                            return $.ajax({\n                                type: \"DELETE\",\n                                url: \"/grid/delete\",\n                                data: item\n                            });\n                        }\n                    }   \n                });\n            });\n    \n  </script>\n</head>\n<body class=\"container\">\n    <section class=\"row\">\n        \n        <div class=\"col-md-6\"></div>\n        <div class=\"col-md-6\" id=\"jsgrid\">\n        </div>\n    </section>\n</body>\n</html>\n\n",
        "x": 1195.7666015625,
        "y": 154.3000030517578,
        "wires": [
            [
                "e2340607.1d4e5"
            ]
        ]
    },
    {
        "id": "53d965cc.905c0c",
        "type": "http in",
        "z": "edfc21e0.78edc",
        "name": "",
        "url": "/grid/plates",
        "method": "get",
        "swaggerDoc": "",
        "x": 112.76666259765625,
        "y": 155.3000030517578,
        "wires": [
            []
        ]
    },
    {
        "id": "e2340607.1d4e5",
        "type": "http response",
        "z": "edfc21e0.78edc",
        "name": "",
        "x": 1376.7666015625,
        "y": 155.53334045410156,
        "wires": []
    },
    {
        "id": "f79d9052.fb7bc",
        "type": "json",
        "z": "edfc21e0.78edc",
        "name": "",
        "x": 1002.7666015625,
        "y": 154,
        "wires": [
            [
                "fc59088b.b8021"
            ]
        ]
    },
    {
        "id": "20b6ffaf.4ea18",
        "type": "function",
        "z": "edfc21e0.78edc",
        "name": "callback response",
        "func": "/*\npour que la jsGrid soit rafraichie, \nil faut lui envoyer l'objet qui a été mis à jour\n*/\nmsg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140.7666015625,
        "y": 280.2166748046875,
        "wires": [
            [
                "471e8c7e.560cec"
            ]
        ]
    },
    {
        "id": "164a70ab.561727",
        "type": "http response",
        "z": "edfc21e0.78edc",
        "name": "",
        "x": 1350.8831787109375,
        "y": 375.7332763671875,
        "wires": []
    },
    {
        "id": "94660e39.02545",
        "type": "http in",
        "z": "edfc21e0.78edc",
        "name": "",
        "url": "/grid/insert",
        "method": "post",
        "swaggerDoc": "",
        "x": 105.76666259765625,
        "y": 370.9500732421875,
        "wires": [
            []
        ]
    },
    {
        "id": "5303dd7b.d433e4",
        "type": "http in",
        "z": "edfc21e0.78edc",
        "name": "",
        "url": "/grid/delete",
        "method": "delete",
        "swaggerDoc": "",
        "x": 118.76666259765625,
        "y": 467.9500427246094,
        "wires": [
            [
                "16acff40.5753c1"
            ]
        ]
    },
    {
        "id": "16acff40.5753c1",
        "type": "function",
        "z": "edfc21e0.78edc",
        "name": "extract _id",
        "func": "msg._id=msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 305.8833312988281,
        "y": 467.9999694824219,
        "wires": [
            [
                "3d05e1d8.c9f93e"
            ]
        ]
    },
    {
        "id": "3d05e1d8.c9f93e",
        "type": "objectid",
        "z": "edfc21e0.78edc",
        "name": "",
        "x": 477.88330078125,
        "y": 467.6667175292969,
        "wires": [
            []
        ]
    },
    {
        "id": "4f45f6b.5208988",
        "type": "http response",
        "z": "edfc21e0.78edc",
        "name": "",
        "x": 1350.7666015625,
        "y": 462.5332946777344,
        "wires": []
    },
    {
        "id": "e8518b6a.7aab08",
        "type": "function",
        "z": "edfc21e0.78edc",
        "name": "callback response",
        "func": "/*\npour que la jsGrid soit rafraichie, \nil faut lui envoyer l'objet qui a été mis à jour\n*/\nmsg.payload=msg.req.body;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1147.88330078125,
        "y": 377,
        "wires": [
            [
                "164a70ab.561727"
            ]
        ]
    },
    {
        "id": "8aa499cf.5af49",
        "type": "comment",
        "z": "edfc21e0.78edc",
        "name": "database collection information",
        "info": "The collection is named LicensePlate. \nEach document format is :\n```JavaScript\n{\n    \"_id\": ObjectID(\"585a4732ac11400192a60b85\"),\n    \"nom\": \"riotte\",\n    \"prenom\": \"françois\",\n    \"immatriculation\": \"123456\",\n    \"heure\": \"13\",\n    \"minute\": \"30\"\n}\n```",
        "x": 852.7666320800781,
        "y": 77,
        "wires": []
    }
]