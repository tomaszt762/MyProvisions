version: "3"
services:
  api:
    build: .
    container_name: "api"
    ports:
    - 8000:8000
    depends_on:
      - postgrest
    networks:
      - private
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    ports:
      - "3001:3000"
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - PGRST_OPENAPI_SERVER_PROXY_URI=${REST_HOST}
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
    depends_on:
      - postgres
    networks:
      - private
    restart: always
  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui:latest
    ports:
      - "8080:8080"
    environment:
      - API_URL=${REST_HOST}
      - SWAGGER_JSON = /swagger.json
    depends_on:
      - postgrest
    restart: always
  postgres:
    container_name: postgres
    image: postgres:13-alpine
    ports:
      - '5432:5432'
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes: 
      - postgres-data:/var/lib/postgresql/data
      - "./initdb:/docker-entrypoint-initdb.d"
    networks:
      - private
  admin-postgres:
    container_name: admin-postgres
    image: dpage/pgadmin4
    restart: always
    environment:
#      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
#      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE="False" 
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - private
volumes:
  postgres-data:
networks:
  private:
      driver: bridge

#    external: true
# docker-compose up -d
# docker-compose down
# docker-compose start
# docker-compose stop